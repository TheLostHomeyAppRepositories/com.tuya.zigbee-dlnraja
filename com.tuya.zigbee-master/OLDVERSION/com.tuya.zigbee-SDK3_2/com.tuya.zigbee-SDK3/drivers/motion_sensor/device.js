'use strict'; const { ZigBeeDevice, Util } = require('homey-zigbeedriver'); const { CLUSTER } = require('zigbee-clusters'); const BATTERY_UPDATE_INTERVAL = 1000 * 60 * 30; class motion_sensor extends ZigBeeDevice { async onNodeInit({ zclNode }) { this.printNode(); this._powerConfiguration = zclNode.endpoints[1].clusters[CLUSTER.POWER_CONFIGURATION.NAME]; const iasZone = zclNode.endpoints[1].clusters[CLUSTER.IAS_ZONE.NAME]; iasZone.onZoneStatusChangeNotification = this.onZoneStatusChanged.bind(this); this._syncBattery = Util.throttle( this._updateBattery.bind(this), BATTERY_UPDATE_INTERVAL ); if (this.isFirstInit()) { this._updateBattery(); } } onZoneStatusChanged({zoneStatus, extendedStatus, zoneId, delay,}) { this.log('onZoneStatusChanged received:', zoneStatus, extendedStatus, zoneId, delay); this.setCapabilityValue('alarm_motion', zoneStatus.alarm1).catch(this.error); this._syncBattery(); } async _updateBattery() { const attrs = await this._powerConfiguration.readAttributes( ["batteryPercentageRemaining"] ).catch(this.error); if (attrs) { const percent = attrs.batteryPercentageRemaining; console.log('Set measure_battery: ', percent / 2); this.setCapabilityValue('measure_battery', percent / 2).catch(this.error); } } onDeleted(){ this.log("Motion Sensor removed") } } module.exports = motion_sensor; 
