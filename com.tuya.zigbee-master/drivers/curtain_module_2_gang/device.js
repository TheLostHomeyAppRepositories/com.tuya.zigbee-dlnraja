"use strict"; const { ZigBeeDevice } = require("homey-zigbeedriver"); const { Cluster, debug, CLUSTER } = require("zigbee-clusters"); const TuyaWindowCoveringCluster = require("../../lib/TuyaWindowCoveringCluster"); const { mapValueRange } = require("../../lib/util"); Cluster.addCluster(TuyaWindowCoveringCluster); const UP_OPEN = "upOpen"; const DOWN_CLOSE = "downClose"; const REPORT_DEBOUNCER = 5000; class curtain_module_2_gang extends ZigBeeDevice { invertPercentageLiftValue = false; constructor(...args) { super(...args); this._reportPercentageDebounce = null; this._reportDebounceEnabled = false; } async onNodeInit({ zclNode }) { await super.onNodeInit({ zclNode }); this.printNode(); const { subDeviceId } = this.getData(); const endpoint = subDeviceId === "secondModule" ? 2 : 1; this.log("Device data: ", subDeviceId); this.log("Endpoint: ", endpoint); this.registerCapability( "windowcoverings_set", CLUSTER.WINDOW_COVERING, { endpoint: endpoint, setParser: async (value) => { 
