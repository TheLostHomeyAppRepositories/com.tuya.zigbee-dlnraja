try { 'use strict'; const { ZigBeeDevice } = require('homey-meshdriver'); const { debug, CLUSTER } = require('zigbee-clusters'); class wall_remote_4_gang_3 extends ZigbeeDevice { async this.registerCapability('onoff', CLUSTER.ON_OFF); var debounce = 0; debug(true); this.printNode(); const node = await this.homey.zigbee.getNode(this); node.handleFrame = (endpointId, clusterId, frame, meta) => { if (clusterId === 6) { this.log("endpointId:", endpointId,", clusterId:", clusterId,", frame:", frame, ", meta:", meta); this.log("Frame JSON data:", frame.toJSON()); debounce = debounce+1; if (debounce===1){ this.buttonCommandParser(endpointId, frame); } else { debounce=0; } } }; this._buttonPressedTriggerDevice = this.homey.flow.getDeviceTriggerCard('wall_remote_4_gang_buttons_3') .registerRunListener(async (args, state) => { return (null, args.action === state.action); }); } buttonCommandParser(ep, frame) { var button = ep === 1 ? 'leftUp' : ep === 2 ? 'rightUp' : ep === 3 ? 'leftDown' : 'rightDown'; var action = frame[3] === 0 ? 'oneClick' : frame[3] === 1 ? 'twoClicks' : 'longPress'; return this._buttonPressedTriggerDevice.trigger(this, {}, { action: `${button}-${action}` }) .then(() => this.log(`Triggered 4 Gang Smart Switch, action=${button}-${action}`)) .catch(err => this.error('Error triggering 4 Gang Smart Switch', err)); } onDeleted() { this.log("4 Gang Wall Remote removed"); } } module.exports = wall_remote_4_gang_3; } catch(e) { this.error('Driver error', e); } 
