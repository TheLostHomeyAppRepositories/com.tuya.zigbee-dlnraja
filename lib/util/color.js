'use strict'; const hsv = require('color-space/hsv'); const xyz = require('color-space/xyz'); const xyy = require('color-space/xyy'); const rgb = require('color-space/rgb'); const tinyGradient = require('tinygradient'); const FAKE_TEMP_BLUE = { r: 217, g: 244, b: 255 }; const FAKE_TEMP_WHITE = { r: 255, g: 255, b: 255 }; const FAKE_TEMP_YELLOW = { r: 255, g: 201, b: 59 }; const FAKE_LIGHT_TEMPERATURE_GRADIENT = tinyGradient([ FAKE_TEMP_BLUE, FAKE_TEMP_WHITE, FAKE_TEMP_YELLOW, ]); function convertHSVToCIE({ hue, saturation, value }) { if (typeof hue !== 'number') hue = 1; if (typeof saturation !== 'number') saturation = 1; if (typeof value !== 'number') value = 1; const _rgb = hsv.rgb([hue * 360, saturation * 100, value * 100]); const _xyz = rgb.xyz(_rgb); const [x, y, Y] = xyz.xyy(_xyz); return { x, y, Y }; } /** * Method that converts colors from the CIE (xyY) color space to the HSV color space. Note: do * not use this for converting xy values from Zigbee devices to HSV, that seems to be inaccurate * (see: https: 

