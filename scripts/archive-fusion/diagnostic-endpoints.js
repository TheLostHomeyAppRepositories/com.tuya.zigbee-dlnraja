const fs = require('fs');

console.log('üîç DIAGNOSTIC APPROFONDI - Endpoints');

// Analyser un driver sp√©cifique
const driverName = 'motion_sensor_battery';
const filePath = `drivers/${driverName}/driver.compose.json`;

console.log(`\nüìÇ Analyse: ${driverName}`);

if (fs.existsSync(filePath)) {
    const content = fs.readFileSync(filePath, 'utf8');
    console.log('‚úÖ Fichier existe');
    
    try {
        const parsed = JSON.parse(content);
        console.log('‚úÖ JSON valide');
        
        console.log('\nüìä Structure zigbee:');
        if (parsed.zigbee) {
            console.log('‚úÖ zigbee object pr√©sent');
            console.log('Contents:', JSON.stringify(parsed.zigbee, null, 2));
            
            if (parsed.zigbee.endpoints) {
                console.log('‚úÖ endpoints pr√©sent');
                console.log('Endpoints:', JSON.stringify(parsed.zigbee.endpoints, null, 2));
            } else {
                console.log('‚ùå endpoints MANQUANT');
            }
        } else {
            console.log('‚ùå zigbee object MANQUANT');
        }
        
    } catch(e) {
        console.log('‚ùå Erreur parsing:', e.message);
    }
} else {
    console.log('‚ùå Fichier introuvable');
}

// V√©rifier le app.json g√©n√©r√©
console.log('\nüìÇ V√©rification app.json g√©n√©r√©...');
if (fs.existsSync('app.json')) {
    const appContent = fs.readFileSync('app.json', 'utf8');
    const appData = JSON.parse(appContent);
    
    const driver = appData.drivers?.find(d => d.id === driverName);
    if (driver) {
        console.log('‚úÖ Driver trouv√© dans app.json');
        if (driver.zigbee) {
            console.log('‚úÖ zigbee dans app.json');
            if (driver.zigbee.endpoints) {
                console.log('‚úÖ endpoints dans app.json');
                console.log('Endpoints:', JSON.stringify(driver.zigbee.endpoints, null, 2));
            } else {
                console.log('‚ùå endpoints MANQUANT dans app.json');
            }
        } else {
            console.log('‚ùå zigbee MANQUANT dans app.json');
        }
    } else {
        console.log('‚ùå Driver non trouv√© dans app.json');
    }
}

console.log('\nüéØ CONCLUSION:');
console.log('Le probl√®me semble √™tre dans la g√©n√©ration/synchronisation du app.json');
