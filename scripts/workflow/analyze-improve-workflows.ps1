# Analyse et Amélioration des Workflows - Tuya Zigbee Project
Write-Host "Analyse et Amélioration des Workflows - Tuya Zigbee Project" -ForegroundColor Green
Write-Host "=====================================================" -ForegroundColor Green

# Récupérer tous les workflows
$Workflows = Get-ChildItem -Path ".github/workflows" -Filter "*.yml"

Write-Host "Analyse de $($Workflows.Count) workflows..." -ForegroundColor Cyan

$AnalysisResults = @()
$IssuesFound = @()
$Improvements = @()

foreach ($Workflow in $Workflows) {
    Write-Host "Analyzing $($Workflow.Name)..." -ForegroundColor Yellow
    
    $Content = Get-Content $Workflow.FullName -Raw -ErrorAction SilentlyContinue
    $Analysis = @{
        Name = $Workflow.Name
        Size = $Workflow.Length
        Issues = @()
        Improvements = @()
        Status = "OK"
    }
    
    # Vérifications de base
    if ($Content -match "on:") {
        $Analysis.Status = "Valid"
    } else {
        $Analysis.Issues += "Missing trigger definition"
        $Analysis.Status = "Invalid"
    }
    
    # Vérifier les jobs
    if ($Content -match "jobs:") {
        $Analysis.Status = "Valid"
    } else {
        $Analysis.Issues += "Missing jobs section"
        $Analysis.Status = "Invalid"
    }
    
    # Vérifier les permissions
    if ($Content -match "permissions:") {
        $Analysis.Status = "Valid"
    } else {
        $Analysis.Improvements += "Add permissions section for security"
    }
    
    # Vérifier les timeouts
    if ($Content -match "timeout-minutes:") {
        $Analysis.Status = "Valid"
    } else {
        $Analysis.Improvements += "Add timeout-minutes for job control"
    }
    
    # Vérifier les conditions d'échec
    if ($Content -match "continue-on-error:") {
        $Analysis.Status = "Valid"
    } else {
        $Analysis.Improvements += "Add continue-on-error for robustness"
    }
    
    # Vérifier les notifications
    if ($Content -match "notifications" -or $Content -match "slack" -or $Content -match "email") {
        $Analysis.Status = "Valid"
    } else {
        $Analysis.Improvements += "Add notifications for monitoring"
    }
    
    # Vérifier la documentation
    if ($Content -match "description:" -or $Content -match "##") {
        $Analysis.Status = "Valid"
    } else {
        $Analysis.Improvements += "Add documentation/comments"
    }
    
    # Vérifier les variables d'environnement
    if ($Content -match "env:" -or $Content -match "GITHUB_TOKEN") {
        $Analysis.Status = "Valid"
    } else {
        $Analysis.Improvements += "Add environment variables"
    }
    
    # Vérifier les caches
    if ($Content -match "actions/cache" -or $Content -match "cache:") {
        $Analysis.Status = "Valid"
    } else {
        $Analysis.Improvements += "Add caching for performance"
    }
    
    # Vérifier les tests
    if ($Content -match "test" -or $Content -match "validate" -or $Content -match "check") {
        $Analysis.Status = "Valid"
    } else {
        $Analysis.Improvements += "Add validation/tests"
    }
    
    $AnalysisResults += $Analysis
    
    if ($Analysis.Issues.Count -gt 0) {
        $IssuesFound += $Analysis
    }
    
    if ($Analysis.Improvements.Count -gt 0) {
        $Improvements += $Analysis
    }
}

# Générer le rapport d'analyse
$ReportDate = Get-Date -Format "yyyyMMdd"
$ReportContent = @"
# Analyse et Amélioration des Workflows - Tuya Zigbee Project

**Date:** $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')
**Generated by:** Analyse et Amélioration des Workflows Script

## Résumé de l'Analyse

- **Total Workflows:** $($Workflows.Count)
- **Workflows Valides:** $(($AnalysisResults | Where-Object { $_.Status -eq "Valid" }).Count)
- **Workflows avec Problèmes:** $($IssuesFound.Count)
- **Workflows à Améliorer:** $($Improvements.Count)

## Workflows avec Problèmes

"@

foreach ($Issue in $IssuesFound) {
    $ReportContent += @"

### $($Issue.Name)
- **Status:** $($Issue.Status)
- **Size:** $($Issue.Size) bytes
- **Issues:**
$($Issue.Issues | ForEach-Object { "  - $_" })
"@
}

$ReportContent += @"

## Workflows à Améliorer

"@

foreach ($Improvement in $Improvements) {
    $ReportContent += @"

### $($Improvement.Name)
- **Status:** $($Improvement.Status)
- **Size:** $($Improvement.Size) bytes
- **Améliorations suggérées:**
$($Improvement.Improvements | ForEach-Object { "  - $_" })
"@
}

$ReportContent += @"

## Recommandations d'Amélioration

### 1. Sécurité
- Ajouter des permissions spécifiques à chaque workflow
- Utiliser des secrets pour les tokens sensibles
- Limiter les permissions au minimum nécessaire

### 2. Performance
- Ajouter des caches pour les dépendances
- Optimiser les étapes parallèles
- Utiliser des timeouts appropriés

### 3. Robustesse
- Ajouter des conditions d'échec appropriées
- Implémenter des retry mechanisms
- Ajouter des validations

### 4. Monitoring
- Ajouter des notifications
- Implémenter des métriques
- Ajouter des logs détaillés

### 5. Documentation
- Ajouter des descriptions claires
- Documenter les paramètres
- Ajouter des exemples d'utilisation

---
*Rapport généré automatiquement par le script Analyse et Amélioration des Workflows*
"@

if (!(Test-Path "rapports")) {
    New-Item -ItemType Directory -Path "rapports" -Force
}

Set-Content -Path "docs/reports/WORKFLOW_ANALYSIS_REPORT_$ReportDate.md" -Value $ReportContent -Encoding UTF8

Write-Host "`nAnalyse terminée!" -ForegroundColor Green
Write-Host "Rapport: docs/reports/WORKFLOW_ANALYSIS_REPORT_$ReportDate.md" -ForegroundColor Cyan

Write-Host "`nRésumé:" -ForegroundColor Yellow
Write-Host "  Workflows analysés: $($Workflows.Count)" -ForegroundColor White
Write-Host "  Avec problèmes: $($IssuesFound.Count)" -ForegroundColor Red
Write-Host "  À améliorer: $($Improvements.Count)" -ForegroundColor Yellow
Write-Host "  Valides: $(($AnalysisResults | Where-Object { $_.Status -eq "Valid" }).Count)" -ForegroundColor Green 
