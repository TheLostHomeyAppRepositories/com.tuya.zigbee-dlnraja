name: 📚 Documentation & Translation

on:
  push:
    branches: [ master ]
    paths:
      - 'drivers/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.github/workflows/documentation.yml'
  workflow_dispatch:
    inputs:
      language:
        description: 'Language to generate documentation for'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - en
          - fr
          - nl
          - ta

permissions:
  contents: read
  issues: write
  actions: read

concurrency:
  group: documentation-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [en, fr, nl, ta]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🌐 Setup language environment
        run: |
          echo "🌐 Setting up language environment for ${{ matrix.language }}"
          
          # Set language-specific variables
          case "${{ matrix.language }}" in
            "en")
              LANG_NAME="English"
              LANG_CODE="en"
              ;;
            "fr")
              LANG_NAME="Français"
              LANG_CODE="fr"
              ;;
            "nl")
              LANG_NAME="Nederlands"
              LANG_CODE="nl"
              ;;
            "ta")
              LANG_NAME="தமிழ்"
              LANG_CODE="ta"
              ;;
          esac
          
          echo "LANG_NAME=$LANG_NAME" >> $GITHUB_ENV
          echo "LANG_CODE=$LANG_CODE" >> $GITHUB_ENV

      - name: 📊 Generate driver documentation
        run: |
          echo "📊 Generating driver documentation for $LANG_NAME..."
          
          # Create documentation directory
          mkdir -p docs/$LANG_CODE
          
          # Generate driver overview
          cat << EOF > docs/$LANG_CODE/drivers-overview.md
          # Driver Overview - $LANG_NAME
          
          **Generated**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          **Language**: $LANG_NAME ($LANG_CODE)
          
          ## Zigbee Drivers
          
          ### Categories
          EOF
          
          # Add Zigbee categories
          for category in $(find drivers/zigbee -type d -mindepth 2 -maxdepth 2 -exec basename {} \; | sort); do
            driver_count=$(find drivers/zigbee/$category -name "device.js" | wc -l)
            echo "#### $category ($driver_count drivers)" >> docs/$LANG_CODE/drivers-overview.md
            echo "" >> docs/$LANG_CODE/drivers-overview.md
          done
          
          echo "## Tuya Drivers" >> docs/$LANG_CODE/drivers-overview.md
          echo "" >> docs/$LANG_CODE/drivers-overview.md
          echo "### Categories" >> docs/$LANG_CODE/drivers-overview.md
          
          # Add Tuya categories
          for category in $(find drivers/tuya -type d -mindepth 2 -maxdepth 2 -exec basename {} \; | sort); do
            driver_count=$(find drivers/tuya/$category -name "device.js" | wc -l)
            echo "#### $category ($driver_count drivers)" >> docs/$LANG_CODE/drivers-overview.md
            echo "" >> docs/$LANG_CODE/drivers-overview.md
          done

      - name: 📝 Generate changelog
        run: |
          echo "📝 Generating changelog for $LANG_NAME..."
          
          # Create changelog
          cat << EOF > docs/$LANG_CODE/CHANGELOG.md
          # Changelog - $LANG_NAME
          
          **Version**: 2.0.0
          **Date**: $(date -u +'%Y-%m-%d')
          **Language**: $LANG_NAME
          
          ## [2.0.0] - $(date -u +'%Y-%m-%d')
          
          ### Added
          - 🚀 Complete driver reorganization
          - 📁 Structured category system
          - 🔄 Automated workflows
          - 📚 Multi-language documentation
          - 🧹 Automated maintenance
          
          ### Changed
          - 🔄 Improved project structure
          - 📊 Enhanced driver organization
          - 🎯 Optimized workflows
          - 🌐 Multi-language support
          
          ### Fixed
          - 🐛 Workflow syntax errors
          - 🔧 Build configuration issues
          - 📁 File organization problems
          
          ## [1.0.0] - Initial Release
          
          ### Added
          - 🔌 Basic driver support
          - 📱 Homey integration
          - 🔧 Basic configuration
          
          ---
          
          *This changelog is automatically generated for $LANG_NAME ($LANG_CODE)*
          EOF

      - name: 📚 Generate README
        run: |
          echo "📚 Generating README for $LANG_NAME..."
          
          # Create README
          cat << EOF > docs/$LANG_CODE/README.md
          # Tuya Zigbee Project - $LANG_NAME
          
          ## 🌟 Overview
          
          This project provides comprehensive driver support for Tuya and Zigbee devices in Homey.
          
          ## 📁 Structure
          
          ### Drivers
          - **Zigbee**: $(find drivers/zigbee -name "device.js" | wc -l) drivers in $(find drivers/zigbee -type d -mindepth 2 -maxdepth 2 | wc -l) categories
          - **Tuya**: $(find drivers/tuya -name "device.js" | wc -l) drivers in $(find drivers/tuya -type d -mindepth 2 -maxdepth 2 | wc -l) categories
          
          ### Categories
          - Climate control
          - Lighting
          - Sensors
          - Switches
          - Security
          - Covers
          - Plugs
          - Other devices
          
          ## 🚀 Features
          
          - 🔌 Complete driver coverage
          - 📱 Homey SDK3 support
          - 🌐 Multi-language support
          - 🔄 Automated workflows
          - 📊 Real-time monitoring
          
          ## 📖 Documentation
          
          - [Driver Overview](drivers-overview.md)
          - [Changelog](CHANGELOG.md)
          - [Installation Guide](../en/INSTALLATION.md)
          
          ---
          
          *Documentation generated for $LANG_NAME ($LANG_CODE)*
          EOF

      - name: 📤 Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation-${{ matrix.language }}
          path: docs/${{ matrix.language }}/
          retention-days: 30

  finalize-docs:
    runs-on: ubuntu-latest
    needs: generate-docs
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📊 Documentation Summary
        run: |
          echo "📊 Documentation Generation Summary"
          echo "=================================="
          echo "📅 Generated: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          echo "🌐 Languages processed: ${{ github.event.inputs.language == 'all' && 'English, French, Dutch, Tamil' || github.event.inputs.language }}"
          echo "📚 Documentation files created"
          echo "📝 Changelogs generated"
          echo "📖 READMEs updated"
          echo ""
          echo "✅ All documentation has been generated successfully!"
          echo "🚀 Multi-language support is now complete!"
