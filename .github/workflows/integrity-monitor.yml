# integrity-monitor.yml
# Description: Workflow automatisÃ© pour integrity monitor
# Date: 2025-07-25
# Version: 1.0

name: ðŸ›¡ï¸ Integrity Monitor OptimisÃ©


# Permissions pour la sÃ©curitÃ©
permissions:
  contents: read
  pull-requests: read
  issues: read
  actions: read
  security-events: read

on:
  push:
    branches: [ master, beta ]
  pull_request:
    branches: [ master, beta ]
  workflow_dispatch:

jobs:
  integrity-monitor:
    runs-
# Permissions pour la sÃ©curitÃ©
permissions:
  contents: read
  pull-requests: read
  issues: read
  actions: read
  security-events: read

on: ubuntu-latest
    name: ðŸ›¡ï¸ Monitoring d'intÃ©gritÃ© robuste
    
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_VERSION: '18'
        PYTHON_VERSION: '3.11'

    steps:
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: ðŸ“¥ Checkout repository
        uses: actions/checkout@v3
      - name: ðŸ›¡ï¸ VÃ©rification des fichiers critiques
        run: |
          echo "ðŸ›¡ï¸ VÃ©rification des fichiers critiques..."
          for file in app.js app.json package.json README.md; do
            if [ -f "$file" ]; then
              echo "âœ… $file prÃ©sent."
            else
              echo "âŒ $file manquant !"; exit 1;
            fi
          done
      - name: ðŸ“ˆ Rapport d'intÃ©gritÃ©
        run: |
          echo "ðŸ“ˆ Rapport d'intÃ©gritÃ© : tous les fichiers critiques sont prÃ©sents."
          echo "âœ… Monitoring d'intÃ©gritÃ© terminÃ© avec succÃ¨s."

