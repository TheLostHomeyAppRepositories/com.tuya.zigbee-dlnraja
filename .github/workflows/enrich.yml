name: 🚀 Enrich Drivers

on:
  schedule:
    - cron: '0 4 * * 1' # Every Monday at 4 AM UTC
  workflow_dispatch:
    inputs:
      source:
        description: 'Source to enrich from'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - blakadder
          - zigbee2mqtt
          - tuya_official
          - community

jobs:
  enrich:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: |
        npm ci
        npm install -g npm-check-updates
        
    - name: 🔍 Check for updates
      run: |
        ncu --target minor --format group
        echo "Dependency updates available"
        
    - name: 📊 Analyze current state
      run: |
        npm run analyze:current-state
        echo "Current state analysis completed"
        
    - name: 🌐 Scrape Blakadder
      if: ${{ github.event.inputs.source == 'all' || github.event.inputs.source == 'blakadder' }}
      run: |
        npm run scrape:blakadder
        echo "Blakadder scraping completed"
        
    - name: 🌐 Scrape Zigbee2MQTT
      if: ${{ github.event.inputs.source == 'all' || github.event.inputs.source == 'zigbee2mqtt' }}
      run: |
        npm run scrape:zigbee2mqtt
        echo "Zigbee2MQTT scraping completed"
        
    - name: 🌐 Scrape Tuya Official
      if: ${{ github.event.inputs.source == 'all' || github.event.inputs.source == 'tuya_official' }}
      run: |
        npm run scrape:tuya-official
        echo "Tuya Official scraping completed"
        
    - name: 🌐 Scrape Community
      if: ${{ github.event.inputs.source == 'all' || github.event.inputs.source == 'community' }}
      run: |
        npm run scrape:community
        echo "Community scraping completed"
        
    - name: 🔄 Merge and enrich
      run: |
        npm run enrich:merge
        echo "Data merging and enrichment completed"
        
    - name: 📝 Generate new drivers
      run: |
        npm run generate:drivers
        echo "New drivers generated"
        
    - name: 🔍 Validate enriched data
      run: |
        npm run validate:enriched
        echo "Enriched data validation completed"
        
    - name: 📊 Update DRIVER_MATRIX.json
      run: |
        npm run update:driver-matrix
        echo "Driver matrix updated"
        
    - name: 📈 Generate enrichment report
      run: |
        npm run report:enrichment
        echo "Enrichment report generated"
        
    - name: 📤 Upload enrichment artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: enrichment-artifacts
        path: |
          reports/enrichment/
          data/scraped/
          drivers/generated/
        retention-days: 90

  create-pr:
    runs-on: ubuntu-latest
    needs: enrich
    if: success()
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
        
    - name: 🔍 Check for changes
      id: check-changes
      run: |
        if git diff --quiet HEAD~1 HEAD; then
          echo "no-changes=true" >> $GITHUB_OUTPUT
        else
          echo "no-changes=false" >> $GITHUB_OUTPUT
        fi
        
    - name: 📝 Create Pull Request
      if: steps.check-changes.outputs.no-changes == 'false'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: |
          🚀 Auto-enrichment: Update drivers and matrix
          
          Automated enrichment from external sources:
          - Blakadder: New device models
          - Zigbee2MQTT: Enhanced capabilities
          - Tuya Official: Latest specifications
          - Community: User contributions
          
          Changes:
          - Updated DRIVER_MATRIX.json
          - Added new driver models
          - Enhanced existing drivers
          - Updated documentation
          
          Generated by GitHub Actions enrichment workflow
          Date: ${{ github.event.schedule || 'Manual trigger' }}
        title: |
          🚀 Auto-enrichment: Driver updates and enhancements
        body: |
          ## 🚀 Automated Driver Enrichment
          
          This PR contains automatically generated updates from our enrichment pipeline.
          
          ### 📊 Summary of Changes
          - **New Drivers Added**: [Count] new device models
          - **Drivers Enhanced**: [Count] existing drivers improved
          - **Matrix Updated**: DRIVER_MATRIX.json synchronized
          - **Documentation**: README and metadata updated
          
          ### 🔍 Sources
          - **Blakadder**: ${{ github.event.inputs.source == 'all' || github.event.inputs.source == 'blakadder' }}
          - **Zigbee2MQTT**: ${{ github.event.inputs.source == 'all' || github.event.inputs.source == 'zigbee2mqtt' }}
          - **Tuya Official**: ${{ github.event.inputs.source == 'all' || github.event.inputs.source == 'tuya_official' }}
          - **Community**: ${{ github.event.inputs.source == 'all' || github.event.inputs.source == 'community' }}
          
          ### 📋 Review Checklist
          - [ ] New drivers follow naming conventions
          - [ ] Capabilities are properly mapped
          - [ ] Tuya DPs are correctly identified
          - [ ] Documentation is complete
          - [ ] Assets are properly sized
          
          ### 🧪 Testing
          - [ ] Drivers load without errors
          - [ ] Capabilities work as expected
          - [ ] Flow cards function properly
          - [ ] Settings are configurable
          
          ### 📈 Impact
          - **Enrichment Score**: [Score] / 100
          - **Confidence Level**: [Level] (low/medium/high)
          - **Backward Compatibility**: ✅ Maintained
          
          ---
          
          *Generated by GitHub Actions on ${{ github.event.schedule || 'Manual trigger' }}*
          
          **Note**: This is an automated PR. Please review carefully before merging.
        branch: auto-enrichment/${{ github.run_id }}
        base: develop
        delete-branch: true
        labels: |
          auto-generated
          enrichment
          drivers
          enhancement
        assignees: dlnraja
        reviewers: dlnraja
        
    - name: 📊 Update dashboard
      if: steps.check-changes.outputs.no-changes == 'false'
      run: |
        npm run update:dashboard
        echo "Dashboard updated with new metrics"
        
    - name: 📤 Upload PR artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pr-artifacts
        path: |
          reports/enrichment/
          data/scraped/
          drivers/generated/
        retention-days: 30

  notification:
    runs-on: ubuntu-latest
    needs: [enrich, create-pr]
    if: always()
    
    steps:
    - name: 📧 Send notification
      run: |
        echo "## 📧 Enrichment Notification" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.create-pr.outputs.no-changes }}" == "false" ]; then
          echo "✅ Enrichment completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "📝 Pull Request created: #${{ needs.create-pr.outputs.pr-number }}" >> $GITHUB_STEP_SUMMARY
        else
          echo "ℹ️ No changes detected - no PR created" >> $GITHUB_STEP_SUMMARY
        fi
        echo "📊 Enrichment artifacts uploaded" >> $GITHUB_STEP_SUMMARY
        echo "🔄 Next scheduled run: Monday 4 AM UTC" >> $GITHUB_STEP_SUMMARY
