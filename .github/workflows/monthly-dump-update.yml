name: Monthly Dump and Update Automation

on:
  schedule:
    # Run on the 1st of every month at 4:00 UTC
    - cron: '0 4 1 * *'
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '18'
  NPM_VERSION: '8'

jobs:
  monthly-dump-update:
    name: Monthly Dump and Update
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup npm
        run: |
          npm install -g npm@${{ env.NPM_VERSION }}
          npm cache clean --force

      - name: Install dependencies
        run: |
          npm ci
          echo "Dependencies installed successfully"

      - name: Make scripts executable
        run: |
          chmod +x scripts/linux/automation/monthly-dump-update.sh
          chmod +x scripts/linux/automation/*.sh
          echo "Scripts made executable"

      - name: Run monthly dump and update
        run: |
          echo "Starting monthly dump and update automation..."
          ./scripts/linux/automation/monthly-dump-update.sh
          echo "Monthly dump and update completed"

      - name: Upload logs as artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: monthly-dump-logs-${{ github.run_number }}
          path: |
            logs/monthly-*
            logs/validation-*
            logs/outdated-packages-*
            dumps/
            backups/

      - name: Commit and push changes
        run: |
          git config --local user.email "dylan.rajasekaram@gmail.com"
          git config --local user.name "dlnraja"
          
          # Add all changes
          git add .
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            # Create commit message
            COMMIT_DATE=$(date '+%Y-%m-%d %H:%M:%S')
            VERSION=$(grep '"version"' package.json | sed 's/.*"version": "\([^"]*\)".*/\1/')
            
            git commit -m "🔄 MONTHLY DUMP AND UPDATE - $COMMIT_DATE

✅ ACTIONS PERFORMED:
- Monthly source dump and update
- Official Homey sources dumped
- GitHub repositories information updated
- Dependencies updated and validated
- Project constraints validated
- Documentation updated with latest information
- Version incremented to $VERSION

📊 METRICS:
- Drivers count updated
- Workflows count updated
- Dependencies checked for updates
- Project structure validated

🎯 OBJECTIVE: Continuous project maintenance and updates
🌟 STATUS: Monthly automation completed successfully"

            # Push changes
            git push origin main
            echo "Changes committed and pushed successfully"
          fi

      - name: Create summary comment
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let summary = `## 📊 Monthly Dump and Update Summary
            
            **Date**: ${new Date().toISOString().split('T')[0]}
            **Status**: ✅ Completed
            
            ### 🔄 Actions Performed:
            - ✅ Monthly source dump and update
            - ✅ Official Homey sources dumped
            - ✅ GitHub repositories information updated
            - ✅ Dependencies updated and validated
            - ✅ Project constraints validated
            - ✅ Documentation updated
            
            ### 📈 Metrics:
            - Drivers count: Updated
            - Workflows count: Updated
            - Dependencies: Checked for updates
            - Project structure: Validated
            
            ### 📝 Logs:
            - Monthly dump logs available as artifacts
            - Validation results included
            - Outdated packages list generated
            
            ---
            *Generated by GitHub Actions monthly automation*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

  validation:
    name: Post-Update Validation
    runs-on: ubuntu-latest
    needs: monthly-dump-update
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate project structure
        run: |
          echo "Validating project structure..."
          
          # Check essential files
          if [ ! -f "package.json" ]; then
            echo "❌ package.json missing"
            exit 1
          fi
          
          if [ ! -f "app.js" ]; then
            echo "❌ app.js missing"
            exit 1
          fi
          
          if [ ! -f "homeycompose.json" ]; then
            echo "❌ homeycompose.json missing"
            exit 1
          fi
          
          echo "✅ Essential files validated"

      - name: Build project
        run: |
          echo "Building project..."
          npm run build
          echo "✅ Project built successfully"

      - name: Run tests
        run: |
          echo "Running tests..."
          npm run test
          echo "✅ Tests passed"

      - name: Validate drivers
        run: |
          echo "Validating drivers..."
          DRIVERS_COUNT=$(find drivers -name "*.js" -type f | wc -l)
          echo "Drivers found: $DRIVERS_COUNT"
          
          if [ "$DRIVERS_COUNT" -lt 200 ]; then
            echo "⚠️ Warning: Less than 200 drivers found"
          else
            echo "✅ Drivers count validated"
          fi

      - name: Validate workflows
        run: |
          echo "Validating workflows..."
          WORKFLOWS_COUNT=$(find .github/workflows -name "*.yml" -type f | wc -l)
          echo "Workflows found: $WORKFLOWS_COUNT"
          
          if [ "$WORKFLOWS_COUNT" -lt 10 ]; then
            echo "⚠️ Warning: Less than 10 workflows found"
          else
            echo "✅ Workflows count validated"
          fi

      - name: Create validation report
        run: |
          echo "Creating validation report..."
          
          cat > validation-report.md << EOF
          # Post-Update Validation Report
          
          **Date**: $(date '+%Y-%m-%d %H:%M:%S')
          **Status**: ✅ Passed
          
          ## 📊 Validation Results
          
          ### Essential Files
          - ✅ package.json: Present
          - ✅ app.js: Present
          - ✅ homeycompose.json: Present
          
          ### Project Structure
          - ✅ Drivers: $(find drivers -name "*.js" -type f | wc -l) found
          - ✅ Workflows: $(find .github/workflows -name "*.yml" -type f | wc -l) found
          - ✅ Scripts: $(find scripts -name "*.sh" -type f | wc -l) found
          
          ### Build Status
          - ✅ Project builds successfully
          - ✅ Tests pass
          - ✅ No critical errors
          
          ## 🎯 Conclusion
          
          All validations passed successfully. The monthly update has been applied correctly.
          
          ---
          *Generated by GitHub Actions validation job*
          EOF
          
          echo "✅ Validation report created"

      - name: Upload validation report
        uses: actions/upload-artifact@v4
        with:
          name: validation-report-${{ github.run_number }}
          path: validation-report.md

  notification:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: [monthly-dump-update, validation]
    if: always()
    
    steps:
      - name: Create notification
        run: |
          echo "Creating notification..."
          
          if [ "${{ needs.monthly-dump-update.result }}" == "success" ] && [ "${{ needs.validation.result }}" == "success" ]; then
            echo "✅ Monthly automation completed successfully"
            echo "All validations passed"
          else
            echo "❌ Monthly automation failed"
            echo "Some validations failed"
          fi 
