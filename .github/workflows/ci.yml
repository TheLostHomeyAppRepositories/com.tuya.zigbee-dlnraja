name: CI - Tuya Zigbee Drivers

on:
  push:
    branches: [master, main, develop, 'feature/*', 'bugfix/*']
  pull_request:
    branches: [master, main, develop]
  workflow_dispatch:
    inputs:
      test-type:
        description: 'Type of tests to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - unit
          - integration
          - e2e

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm install -g homey@latest
    
    - name: Run unit tests
      if: github.event.inputs.test-type == 'all' || github.event.inputs.test-type == 'unit'
      run: |
        npm run test:unit
      env:
        NODE_ENV: test
        DEBUG: 'homey:*,zigbee-clusters:*,-*:debug'
    
    - name: Run integration tests
      if: github.event.inputs.test-type == 'all' || github.event.inputs.test-type == 'integration'
      run: |
        npm run test:integration
      env:
        NODE_ENV: test
        DEBUG: 'homey:*,zigbee-clusters:*,-*:debug'
    
    - name: Run E2E tests
      if: (github.event.inputs.test-type == 'all' || github.event.inputs.test-type == 'e2e') && github.ref == 'refs/heads/develop'
      run: |
        npm run test:e2e
      env:
        NODE_ENV: test
        DEBUG: 'homey:*,zigbee-clusters:*,-*:debug'
    
    - name: Run code coverage
      if: success()
      run: |
        npm run test:coverage
    
    - name: Upload coverage to Codecov
      if: success() && github.ref == 'refs/heads/develop'
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          test-results/
          coverage/
          logs/
        retention-days: 7
    
    - name: Run SonarCloud analysis
      if: success() && github.ref == 'refs/heads/develop'
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  validate:
    name: Validation & Linting
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Run TypeScript type checking
      run: npm run type-check
    
    - name: Validate Homey app
      run: homey app validate
    
    - name: Check formatting
      run: npm run format:check

  build:
    name: Build & Package
    runs-on: ubuntu-latest
    needs: [test, validate]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Create release package
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        mkdir -p dist
        zip -r dist/tuya-zigbee-app-${GITHUB_REF#refs/tags/v}.zip . -x '*.git*' 'node_modules/**' 'test/**' '.*' '*.md' '*.yml' '*.yaml'
    
    - name: Upload release assets
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v3
      with:
        name: release-package
        path: dist/*.zip
        retention-days: 7
