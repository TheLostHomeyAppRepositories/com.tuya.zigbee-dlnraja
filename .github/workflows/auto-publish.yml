name: Auto Publish Homey App

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
      changelog:
        description: 'Changelog message'
        required: true
        default: 'Bug fixes and improvements'

env:
  HOMEY_TOKEN: ${{ secrets.HOMEY_TOKEN }}

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Pillow

    - name: Install Homey CLI
      run: |
        npm install -g homey

    - name: Clean and prepare
      run: |
        rm -rf .homeybuild
        echo "Environment cleaned and ready"

    - name: Validate app
      run: |
        homey app validate --level publish
      continue-on-error: false

    - name: Update version and publish
      run: |
        # Setup git
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        # Login to Homey
        echo "$HOMEY_TOKEN" | homey login --token
        
        # Determine version bump
        VERSION_TYPE="${{ github.event.inputs.version_type || 'patch' }}"
        CHANGELOG="${{ github.event.inputs.changelog || 'v1.0.29 - Maximum Device Compatibility Update - Enhanced with 1000+ devices from 60+ manufacturers including complete Johan Bendz compatibility. Added comprehensive manufacturer ID coverage for all device categories. Professional SDK3 architecture with local Zigbee operation.' }}"
        
        echo "Publishing with version bump: $VERSION_TYPE"
        echo "Changelog: $CHANGELOG"
        
        # Use expect to handle interactive prompts
        sudo apt-get install -y expect
        
        expect << EOF
        set timeout 300
        spawn homey app publish
        
        expect {
            "*uncommitted changes*" {
                send "y\\r"
                exp_continue
            }
            "*version number*" {
                send "y\\r"
                exp_continue
            }
            "*patch*minor*major*" {
                send "$VERSION_TYPE\\r"
                exp_continue
            }
            "*Changelog*" {
                send "$CHANGELOG\\r"
                exp_continue
            }
            "*Successfully published*" {
                puts "Publication successful!"
                exit 0
            }
            timeout {
                puts "Publication timed out"
                exit 1
            }
            eof {
                puts "Publication completed"
                exit 0
            }
        }
        EOF

    - name: Commit version changes
      run: |
        git add .
        git commit -m "Version bump and publish: ${{ github.event.inputs.changelog || 'Automated deployment' }}" || echo "No changes to commit"
        git push origin ${{ github.ref_name }} || echo "No changes to push"

    - name: Create release
      if: success()
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.29
        release_name: Release v1.0.29
        body: |
          ${{ github.event.inputs.changelog || 'v1.0.29 - Maximum Device Compatibility Update - Enhanced with 1000+ devices from 60+ manufacturers including complete Johan Bendz compatibility.' }}
          
          ## Changes
          - Enhanced with 1000+ devices from 60+ manufacturers
          - Complete Johan Bendz Tuya Zigbee app compatibility
          - Professional SDK3 architecture with local Zigbee operation
          - Comprehensive manufacturer ID coverage for all device categories
        draft: false
        prerelease: false
