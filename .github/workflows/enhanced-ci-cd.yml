name: Enhanced CI/CD Pipeline

on:
  push:
    branches: [master, develop, 'feature/*', 'bugfix/*']
  pull_request:
    branches: [master, develop]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday at midnight
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'test'
        type: choice
        options:
        - test
        - staging
        - production

env:
  NODE_VERSION: '20.x'
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  
jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
        persist-credentials: false

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    - name: Install dependencies
      run: |
        npm ci
        npm install -g homey@latest

    - name: Lint
      run: npm run lint

    - name: Run unit tests
      run: npm run test:unit
      env:
        NODE_ENV: test
        DEBUG: 'homey:*,zigbee-clusters:*,-*:debug'

    - name: Run integration tests
      run: npm run test:integration
      env:
        NODE_ENV: test
        DEBUG: 'homey:*,zigbee-clusters:*,-*:debug'

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        npm install -g homey@latest
        
    - name: Build application
      run: |
        npm run build
        
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: app-build
        path: |
          dist/
          app.json
        retention-days: 5

  deploy:
    name: Deploy
    needs: build
    if: github.event_name == 'push' && (contains(github.ref, 'refs/heads/master') || contains(github.ref, 'refs/heads/main'))
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: app-build
        path: ./
        
    - name: Deploy to Homey
      env:
        HOMEY_APP_ID: com.tuya.zigbee
        HOMEY_CLOUD_TOKEN: ${{ secrets.HOMEY_CLOUD_TOKEN }}
      run: |
        npm install -g homey@latest
        homey login --token $HOMEY_CLOUD_TOKEN
        homey app publish
        
  weekly-sync:
    name: Weekly Sync & Update
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        npm install -g homey@latest
        
    - name: Run weekly update script
      run: |
        node scripts/weekly-update.js
        
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: weekly update [skip ci]'
        title: 'Weekly Update: $(date +'%Y-%m-%d')'
        body: 'Automated weekly update of Tuya Zigbee drivers and dependencies.'
        branch: 'weekly-update/$(date +'%Y-%m-%d')'
        base: develop
        
  validate-drivers:
    name: Validate Drivers
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run driver validation
      run: node scripts/validate-drivers.js
      
    - name: Upload validation report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: driver-validation-report
        path: validation-report.json
        retention-days: 30

  deploy-docs:
    name: Deploy Documentation
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build documentation
      run: npm run docs:build
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/dist
        keep_files: true
        force_orphan: true
        enable_jekyll: false
