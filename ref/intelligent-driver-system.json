{
  "intelligent_driver_system": {
    "version": "1.2.0",
    "last_updated": "2025-07-28T22:27:59.960Z",
    "description": "Système intelligent de détermination et création de drivers Tuya Zigbee avec référentiels exhaustifs",
    "constraints": {
      "local_creation_only": true,
      "max_conditions": "maximum possible",
      "exhaustive_manufacturers": true,
      "exhaustive_brands": true,
      "exhaustive_products": true,
      "intelligent_detection": true,
      "compatibility_maximization": true,
      "fallback_support": true,
      "legacy_support": true,
      "future_proof": true
    },
    "referentials": {
      "manufacturers": {
        "tuya": {
          "name": "Tuya",
          "aliases": [
            "Tuya",
            "TUYA",
            "tuya"
          ],
          "model_prefixes": [
            "TS",
            "TH",
            "TZ",
            "TY"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff"
          ],
          "common_capabilities": [
            "onoff"
          ],
          "firmware_support": [
            "legacy",
            "current",
            "latest",
            "unknown"
          ],
          "characteristics": [
            "smart_switch",
            "smart_bulb",
            "color_light",
            "power_monitor"
          ],
          "brands": [
            "Tuya",
            "TUYA",
            "Smart Life",
            "SmartLife"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg",
            "genColorCtrl"
          ],
          "capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation",
            "measure_power"
          ]
        },
        "zemismart": {
          "name": "Zemismart",
          "aliases": [
            "Zemismart",
            "ZEMISMART",
            "zemismart",
            "ZemiSmart"
          ],
          "model_prefixes": [
            "TZ",
            "ZS",
            "ZM"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl"
          ],
          "common_capabilities": [
            "onoff",
            "dim"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": [
            "smart_switch",
            "smart_bulb",
            "color_light",
            "power_monitor"
          ],
          "brands": [
            "Zemismart",
            "ZEMISMART",
            "ZemiSmart"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg",
            "genColorCtrl"
          ],
          "capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation",
            "measure_power"
          ]
        },
        "novadigital": {
          "name": "NovaDigital",
          "aliases": [
            "NovaDigital",
            "NOVADIGITAL",
            "novadigital",
            "Nova Digital"
          ],
          "model_prefixes": [
            "ND",
            "NV",
            "NOVA"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg"
          ],
          "common_capabilities": [
            "onoff",
            "dim",
            "measure_power"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": [
            "smart_switch",
            "power_monitor",
            "temperature_sensor"
          ],
          "brands": [
            "NovaDigital",
            "NOVADIGITAL",
            "Nova Digital"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg",
            "genTempMeasurement"
          ],
          "capabilities": [
            "onoff",
            "dim",
            "measure_power",
            "measure_temperature"
          ]
        },
        "blitzwolf": {
          "name": "BlitzWolf",
          "aliases": [
            "BlitzWolf",
            "BLITZWOLF",
            "blitzwolf",
            "Blitz Wolf"
          ],
          "model_prefixes": [
            "BW",
            "BL",
            "BW-"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genPowerCfg"
          ],
          "common_capabilities": [
            "onoff",
            "measure_power"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": [
            "smart_switch",
            "power_monitor",
            "temperature_sensor"
          ],
          "brands": [
            "BlitzWolf",
            "BLITZWOLF",
            "Blitz Wolf"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genPowerCfg",
            "genTempMeasurement"
          ],
          "capabilities": [
            "onoff",
            "measure_power",
            "measure_temperature"
          ]
        },
        "moes": {
          "name": "Moes",
          "aliases": [
            "Moes",
            "MOES",
            "moes",
            "MOESGO"
          ],
          "model_prefixes": [
            "MS",
            "MO",
            "MOES"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl"
          ],
          "common_capabilities": [
            "onoff",
            "dim"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": [
            "smart_switch",
            "thermostat",
            "temperature_sensor"
          ],
          "brands": [
            "Moes",
            "MOES",
            "MOESGO"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genTempMeasurement",
            "genThermostat"
          ],
          "capabilities": [
            "onoff",
            "dim",
            "measure_temperature",
            "thermostat_mode"
          ]
        },
        "smartlife": {
          "name": "Smart Life",
          "aliases": [
            "Smart Life",
            "SMART LIFE",
            "smartlife",
            "SmartLife"
          ],
          "model_prefixes": [
            "SL",
            "SM",
            "SMART"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff"
          ],
          "common_capabilities": [
            "onoff"
          ],
          "firmware_support": [
            "legacy",
            "current",
            "latest"
          ],
          "characteristics": [
            "smart_switch",
            "smart_bulb",
            "power_monitor"
          ],
          "brands": [
            "Smart Life",
            "SMART LIFE",
            "SmartLife"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg"
          ],
          "capabilities": [
            "onoff",
            "dim",
            "measure_power"
          ]
        },
        "gosund": {
          "name": "Gosund",
          "aliases": [
            "Gosund",
            "GOSUND",
            "gosund",
            "GoSund"
          ],
          "model_prefixes": [
            "GS",
            "GO",
            "GOSUND"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genPowerCfg"
          ],
          "common_capabilities": [
            "onoff",
            "measure_power"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": [
            "smart_switch",
            "smart_bulb",
            "power_monitor"
          ],
          "brands": [
            "Gosund",
            "GOSUND",
            "GoSund"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg"
          ],
          "capabilities": [
            "onoff",
            "dim",
            "measure_power"
          ]
        },
        "meross": {
          "name": "Meross",
          "aliases": [
            "Meross",
            "MEROSS",
            "meross"
          ],
          "model_prefixes": [
            "MR",
            "ME",
            "MEROSS"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl"
          ],
          "common_capabilities": [
            "onoff",
            "dim"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": [
            "smart_switch",
            "smart_bulb",
            "color_light",
            "power_monitor"
          ],
          "brands": [
            "Meross",
            "MEROSS"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg",
            "genColorCtrl"
          ],
          "capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation",
            "measure_power"
          ]
        },
        "teckin": {
          "name": "Teckin",
          "aliases": [
            "Teckin",
            "TECKIN",
            "teckin"
          ],
          "model_prefixes": [
            "TK",
            "TE",
            "TECKIN"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genPowerCfg"
          ],
          "common_capabilities": [
            "onoff",
            "measure_power"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": [
            "smart_switch",
            "smart_bulb",
            "power_monitor"
          ],
          "brands": [
            "Teckin",
            "TECKIN"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg"
          ],
          "capabilities": [
            "onoff",
            "dim",
            "measure_power"
          ]
        },
        "unknown": {
          "name": "Unknown",
          "aliases": [
            "Unknown",
            "UNKNOWN",
            "unknown",
            "Generic"
          ],
          "model_prefixes": [
            "UNKNOWN",
            "GEN",
            "GENERIC"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff"
          ],
          "common_capabilities": [
            "onoff"
          ],
          "firmware_support": [
            "unknown"
          ],
          "characteristics": [
            "smart_switch",
            "smart_bulb"
          ],
          "brands": [
            "Unknown",
            "Generic",
            "Generic Brand"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl"
          ],
          "capabilities": [
            "onoff",
            "dim"
          ]
        },
        "aqara": {
          "name": "Aqara",
          "aliases": [
            "aqara",
            "aqara_smart"
          ],
          "brands": [
            "Aqara",
            "Xiaomi"
          ],
          "model_prefixes": [
            "WSDCGQ",
            "WSDCGQ01LM",
            "WSDCGQ11LM",
            "SNZB-01",
            "SNZB-02",
            "SNZB-03",
            "SNZB-04"
          ],
          "base_clusters": [
            "genBasic",
            "genPowerCfg",
            "genTempMeasurement",
            "genHumidityMeasurement",
            "genPressureMeasurement"
          ],
          "common_capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_pressure",
            "measure_battery"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": {
            "temperature_sensor": true,
            "humidity_sensor": true,
            "pressure_sensor": true,
            "battery_powered": true
          }
        },
        "ikea": {
          "name": "IKEA",
          "aliases": [
            "ikea",
            "tradfri"
          ],
          "brands": [
            "IKEA",
            "TRÅDFRI"
          ],
          "model_prefixes": [
            "LED",
            "TRADFRI",
            "FYRTUR",
            "KADRILJ"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genColorCtrl",
            "genPowerCfg"
          ],
          "common_capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation",
            "light_temperature"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": {
            "smart_bulb": true,
            "smart_switch": true,
            "smart_blind": true,
            "color_light": true
          }
        },
        "philips": {
          "name": "Philips",
          "aliases": [
            "philips",
            "hue"
          ],
          "brands": [
            "Philips",
            "Hue"
          ],
          "model_prefixes": [
            "LCT",
            "LST",
            "LLC",
            "LWB",
            "LWA"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genColorCtrl",
            "genPowerCfg"
          ],
          "common_capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation",
            "light_temperature"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": {
            "smart_bulb": true,
            "color_light": true,
            "white_light": true,
            "bridge_compatible": true
          }
        },
        "samsung": {
          "name": "Samsung",
          "aliases": [
            "samsung",
            "smartthings"
          ],
          "brands": [
            "Samsung",
            "SmartThings"
          ],
          "model_prefixes": [
            "ST",
            "GP",
            "IM",
            "F-ADT"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg",
            "genAlarms"
          ],
          "common_capabilities": [
            "onoff",
            "dim",
            "measure_power",
            "alarm_contact"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": {
            "smart_switch": true,
            "power_monitor": true,
            "contact_sensor": true,
            "motion_sensor": true
          }
        },
        "bosch": {
          "name": "Bosch",
          "aliases": [
            "bosch",
            "bosch_smart_home"
          ],
          "brands": [
            "Bosch",
            "Bosch Smart Home"
          ],
          "model_prefixes": [
            "BSH",
            "BTH",
            "BSR"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg",
            "genTempMeasurement"
          ],
          "common_capabilities": [
            "onoff",
            "dim",
            "measure_temperature",
            "measure_power"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": {
            "smart_switch": true,
            "thermostat": true,
            "temperature_sensor": true,
            "power_monitor": true
          }
        },
        "legrand": {
          "name": "Legrand",
          "aliases": [
            "legrand",
            "bticino"
          ],
          "brands": [
            "Legrand",
            "BTicino"
          ],
          "model_prefixes": [
            "LC",
            "LD",
            "LM",
            "LN"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg"
          ],
          "common_capabilities": [
            "onoff",
            "dim",
            "measure_power"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": {
            "smart_switch": true,
            "dimmer": true,
            "power_monitor": true,
            "wall_switch": true
          }
        },
        "schneider": {
          "name": "Schneider Electric",
          "aliases": [
            "schneider",
            "wiser"
          ],
          "brands": [
            "Schneider Electric",
            "Wiser"
          ],
          "model_prefixes": [
            "WISER",
            "SCH",
            "SE"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg",
            "genTempMeasurement"
          ],
          "common_capabilities": [
            "onoff",
            "dim",
            "measure_temperature",
            "measure_power"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": {
            "smart_switch": true,
            "thermostat": true,
            "temperature_sensor": true,
            "power_monitor": true
          }
        },
        "somfy": {
          "name": "Somfy",
          "aliases": [
            "somfy",
            "tao"
          ],
          "brands": [
            "Somfy",
            "Tahoma"
          ],
          "model_prefixes": [
            "SOMFY",
            "TAO",
            "IO"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg"
          ],
          "common_capabilities": [
            "onoff",
            "dim",
            "windowcoverings_set"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": {
            "smart_blind": true,
            "roller_shutter": true,
            "curtain_control": true,
            "window_control": true
          }
        },
        "velux": {
          "name": "VELUX",
          "aliases": [
            "velux",
            "velux_active"
          ],
          "brands": [
            "VELUX",
            "VELUX Active"
          ],
          "model_prefixes": [
            "VELUX",
            "VAC"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg"
          ],
          "common_capabilities": [
            "onoff",
            "dim",
            "windowcoverings_set"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": {
            "smart_window": true,
            "roof_window": true,
            "skylight_control": true,
            "ventilation": true
          }
        },
        "niko": {
          "name": "Niko",
          "aliases": [
            "niko",
            "niko_home_control"
          ],
          "brands": [
            "Niko",
            "Niko Home Control"
          ],
          "model_prefixes": [
            "NIKO",
            "NHC"
          ],
          "base_clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg"
          ],
          "common_capabilities": [
            "onoff",
            "dim",
            "measure_power"
          ],
          "firmware_support": [
            "current",
            "latest"
          ],
          "characteristics": {
            "smart_switch": true,
            "dimmer": true,
            "power_monitor": true,
            "wall_switch": true
          }
        }
      },
      "brands": {
        "tuya_official": {
          "manufacturer": "tuya",
          "name": "Tuya Official",
          "aliases": [
            "Tuya Official",
            "TUYA OFFICIAL",
            "tuya official"
          ],
          "model_patterns": [
            "TS*",
            "TH*",
            "TZ*"
          ],
          "characteristics": {
            "official": true,
            "best_support": true,
            "most_reliable": true,
            "reference_implementation": true
          }
        },
        "zemismart_premium": {
          "manufacturer": "zemismart",
          "name": "Zemismart Premium",
          "aliases": [
            "Zemismart Premium",
            "ZEMISMART PREMIUM",
            "zemismart premium"
          ],
          "model_patterns": [
            "TZ*",
            "ZS*"
          ],
          "characteristics": {
            "premium": true,
            "advanced_features": true,
            "high_quality": true,
            "good_support": true
          }
        },
        "novadigital_pro": {
          "manufacturer": "novadigital",
          "name": "NovaDigital Pro",
          "aliases": [
            "NovaDigital Pro",
            "NOVADIGITAL PRO",
            "novadigital pro"
          ],
          "model_patterns": [
            "ND*",
            "NV*"
          ],
          "characteristics": {
            "professional": true,
            "power_monitoring": true,
            "energy_efficient": true,
            "high_quality": true
          }
        },
        "blitzwolf_standard": {
          "manufacturer": "blitzwolf",
          "name": "BlitzWolf Standard",
          "aliases": [
            "BlitzWolf Standard",
            "BLITZWOLF STANDARD",
            "blitzwolf standard"
          ],
          "model_patterns": [
            "BW*",
            "BL*"
          ],
          "characteristics": {
            "standard": true,
            "cost_effective": true,
            "good_performance": true,
            "popular": true
          }
        },
        "moes_specialist": {
          "manufacturer": "moes",
          "name": "Moes Specialist",
          "aliases": [
            "Moes Specialist",
            "MOES SPECIALIST",
            "moes specialist"
          ],
          "model_patterns": [
            "MS*",
            "MO*"
          ],
          "characteristics": {
            "specialist": true,
            "climate_control": true,
            "thermostat": true,
            "energy_saving": true
          }
        },
        "smartlife_basic": {
          "manufacturer": "smartlife",
          "name": "Smart Life Basic",
          "aliases": [
            "Smart Life Basic",
            "SMART LIFE BASIC",
            "smartlife basic"
          ],
          "model_patterns": [
            "SL*",
            "SM*"
          ],
          "characteristics": {
            "basic": true,
            "cost_effective": true,
            "simple": true,
            "widespread": true
          }
        },
        "gosund_power": {
          "manufacturer": "gosund",
          "name": "Gosund Power",
          "aliases": [
            "Gosund Power",
            "GOSUND POWER",
            "gosund power"
          ],
          "model_patterns": [
            "GS*",
            "GO*"
          ],
          "characteristics": {
            "power_monitoring": true,
            "good_quality": true,
            "reliable": true,
            "popular": true
          }
        },
        "meross_quality": {
          "manufacturer": "meross",
          "name": "Meross Quality",
          "aliases": [
            "Meross Quality",
            "MEROSS QUALITY",
            "meross quality"
          ],
          "model_patterns": [
            "MR*",
            "ME*"
          ],
          "characteristics": {
            "quality": true,
            "reliable": true,
            "good_support": true,
            "popular": true
          }
        },
        "teckin_value": {
          "manufacturer": "teckin",
          "name": "Teckin Value",
          "aliases": [
            "Teckin Value",
            "TECKIN VALUE",
            "teckin value"
          ],
          "model_patterns": [
            "TK*",
            "TE*"
          ],
          "characteristics": {
            "value": true,
            "cost_effective": true,
            "good_performance": true,
            "reliable": true
          }
        },
        "generic_unknown": {
          "manufacturer": "unknown",
          "name": "Generic Unknown",
          "aliases": [
            "Generic Unknown",
            "GENERIC UNKNOWN",
            "generic unknown",
            "Unknown Brand"
          ],
          "model_patterns": [
            "UNKNOWN*",
            "GEN*"
          ],
          "characteristics": {
            "generic": true,
            "unknown": true,
            "fallback": true,
            "basic_support": true
          }
        }
      },
      "product_categories": {
        "switch": {
          "name": "Switch",
          "aliases": [
            "Switch",
            "SWITCH",
            "switch",
            "On/Off Switch",
            "Toggle Switch"
          ],
          "clusters": [
            "genBasic",
            "genOnOff"
          ],
          "capabilities": [
            "onoff"
          ],
          "manufacturers": [
            "tuya",
            "zemismart",
            "smartlife",
            "meross",
            "teckin"
          ],
          "model_patterns": [
            "TS0001*",
            "TS004F*",
            "TS011F*",
            "TS0201*"
          ],
          "characteristics": {
            "basic_functionality": true,
            "simple_control": true,
            "widespread": true,
            "reliable": true
          }
        },
        "dimmer": {
          "name": "Dimmer",
          "aliases": [
            "Dimmer",
            "DIMMER",
            "dimmer",
            "Dimmable Switch",
            "Light Dimmer"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl"
          ],
          "capabilities": [
            "onoff",
            "dim"
          ],
          "manufacturers": [
            "zemismart",
            "novadigital",
            "moes",
            "meross"
          ],
          "model_patterns": [
            "TS0207*",
            "TS0601*",
            "TZ*"
          ],
          "characteristics": {
            "dimmable": true,
            "level_control": true,
            "advanced_control": true,
            "popular": true
          }
        },
        "plug": {
          "name": "Smart Plug",
          "aliases": [
            "Smart Plug",
            "SMART PLUG",
            "smart plug",
            "Power Plug",
            "Outlet"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genPowerCfg"
          ],
          "capabilities": [
            "onoff",
            "measure_power"
          ],
          "manufacturers": [
            "tuya",
            "blitzwolf",
            "gosund",
            "teckin"
          ],
          "model_patterns": [
            "TS0207*",
            "BW-*",
            "GS*",
            "TK*"
          ],
          "characteristics": {
            "power_monitoring": true,
            "energy_tracking": true,
            "smart_control": true,
            "popular": true
          }
        },
        "light": {
          "name": "Smart Light",
          "aliases": [
            "Smart Light",
            "SMART LIGHT",
            "smart light",
            "LED Light",
            "Bulb"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genColorCtrl"
          ],
          "capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation"
          ],
          "manufacturers": [
            "zemismart",
            "novadigital",
            "moes"
          ],
          "model_patterns": [
            "TS130F*",
            "THB2*",
            "TZ*"
          ],
          "characteristics": {
            "color_control": true,
            "rgb_support": true,
            "advanced_lighting": true,
            "premium": true
          }
        },
        "sensor": {
          "name": "Sensor",
          "aliases": [
            "Sensor",
            "SENSOR",
            "sensor",
            "Environmental Sensor",
            "Monitor"
          ],
          "clusters": [
            "genBasic",
            "genTempMeasurement",
            "genHumidityMeasurement"
          ],
          "capabilities": [
            "measure_temperature",
            "measure_humidity"
          ],
          "manufacturers": [
            "tuya",
            "zemismart",
            "novadigital"
          ],
          "model_patterns": [
            "TS0201*",
            "TZ*",
            "ND*"
          ],
          "characteristics": {
            "environmental": true,
            "monitoring": true,
            "data_collection": true,
            "useful": true
          }
        },
        "thermostat": {
          "name": "Thermostat",
          "aliases": [
            "Thermostat",
            "THERMOSTAT",
            "thermostat",
            "Climate Control",
            "HVAC"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl"
          ],
          "capabilities": [
            "onoff",
            "dim",
            "thermostat_mode"
          ],
          "manufacturers": [
            "moes",
            "zemismart",
            "novadigital"
          ],
          "model_patterns": [
            "MS*",
            "TZ*",
            "ND*"
          ],
          "characteristics": {
            "climate_control": true,
            "temperature_control": true,
            "energy_saving": true,
            "specialized": true
          }
        },
        "curtain": {
          "name": "Curtain",
          "aliases": [
            "Curtain",
            "CURTAIN",
            "curtain",
            "Blind",
            "Shade"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl"
          ],
          "capabilities": [
            "onoff",
            "dim",
            "windowcoverings_set"
          ],
          "manufacturers": [
            "zemismart",
            "tuya",
            "novadigital"
          ],
          "model_patterns": [
            "TZ*",
            "TS*",
            "ND*"
          ],
          "characteristics": {
            "window_control": true,
            "automation": true,
            "convenience": true,
            "popular": true
          }
        },
        "lock": {
          "name": "Smart Lock",
          "aliases": [
            "Smart Lock",
            "SMART LOCK",
            "smart lock",
            "Lock",
            "Door Lock"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genDoorLock"
          ],
          "capabilities": [
            "onoff",
            "lock_set"
          ],
          "manufacturers": [
            "tuya",
            "zemismart",
            "novadigital"
          ],
          "model_patterns": [
            "TS*",
            "TZ*",
            "ND*"
          ],
          "characteristics": {
            "security": true,
            "access_control": true,
            "safety": true,
            "specialized": true
          }
        },
        "unknown": {
          "name": "Unknown Device",
          "aliases": [
            "Unknown Device",
            "UNKNOWN DEVICE",
            "unknown device",
            "Generic Device"
          ],
          "clusters": [
            "genBasic",
            "genOnOff"
          ],
          "capabilities": [
            "onoff"
          ],
          "manufacturers": [
            "unknown"
          ],
          "model_patterns": [
            "UNKNOWN*",
            "GEN*"
          ],
          "characteristics": {
            "unknown": true,
            "generic": true,
            "fallback": true,
            "basic_support": true
          }
        }
      }
    },
    "intelligent_detection": {
      "confidence_levels": {
        "high": {
          "min_confidence": 0.8,
          "description": "High confidence in device type and capabilities",
          "action": "create_optimized_driver"
        },
        "medium": {
          "min_confidence": 0.6,
          "description": "Medium confidence with some uncertainty",
          "action": "create_compatible_driver"
        },
        "low": {
          "min_confidence": 0.4,
          "description": "Low confidence, using fallback patterns",
          "action": "create_fallback_driver"
        }
      },
      "fallback_strategies": {
        "unknown_manufacturer": {
          "strategy": "use_tuya_pattern",
          "description": "Use Tuya pattern for unknown manufacturers",
          "confidence_boost": 0.3
        },
        "unknown_model": {
          "strategy": "use_basic_pattern",
          "description": "Use basic on/off pattern for unknown models",
          "confidence_boost": 0.2
        },
        "unknown_clusters": {
          "strategy": "use_manufacturer_pattern",
          "description": "Use manufacturer-specific pattern",
          "confidence_boost": 0.4
        },
        "unknown_capabilities": {
          "strategy": "use_category_pattern",
          "description": "Use product category pattern",
          "confidence_boost": 0.3
        }
      },
      "pattern_matching": {
        "manufacturer_detection": {
          "method": "prefix_analysis",
          "description": "Analyze model prefixes to determine manufacturer",
          "accuracy": 0.85
        },
        "brand_detection": {
          "method": "alias_matching",
          "description": "Match device aliases to known brands",
          "accuracy": 0.75
        },
        "category_detection": {
          "method": "cluster_analysis",
          "description": "Analyze Zigbee clusters to determine device category",
          "accuracy": 0.9
        },
        "capability_detection": {
          "method": "cluster_to_capability_mapping",
          "description": "Map clusters to Homey capabilities",
          "accuracy": 0.95
        }
      }
    },
    "driver_generation": {
      "strategies": {
        "optimized": {
          "description": "Create driver with maximum capabilities and optimizations",
          "use_case": "high_confidence_devices",
          "features": [
            "full_capability_support",
            "optimized_performance",
            "advanced_features",
            "comprehensive_documentation"
          ]
        },
        "compatible": {
          "description": "Create driver with good compatibility and features",
          "use_case": "medium_confidence_devices",
          "features": [
            "standard_capability_support",
            "good_performance",
            "reliable_features",
            "basic_documentation"
          ]
        },
        "fallback": {
          "description": "Create basic driver with fallback support",
          "use_case": "low_confidence_devices",
          "features": [
            "basic_capability_support",
            "stable_performance",
            "essential_features",
            "minimal_documentation"
          ]
        }
      },
      "templates": {
        "sdk3_optimized": {
          "framework": "Homey SDK3",
          "structure": "modern",
          "features": [
            "async_await",
            "modern_js",
            "optimized_performance",
            "comprehensive_error_handling"
          ]
        },
        "sdk3_compatible": {
          "framework": "Homey SDK3",
          "structure": "standard",
          "features": [
            "async_await",
            "modern_js",
            "good_performance",
            "standard_error_handling"
          ]
        },
        "sdk3_fallback": {
          "framework": "Homey SDK3",
          "structure": "basic",
          "features": [
            "async_await",
            "modern_js",
            "stable_performance",
            "basic_error_handling"
          ]
        }
      }
    },
    "matrix_integration": {
      "update_frequency": "real_time",
      "integration_method": "additive_silent",
      "data_sources": [
        "local_detection",
        "pattern_analysis",
        "intelligent_matching",
        "fallback_strategies"
      ],
      "output_formats": [
        "driver_compose_json",
        "matrix_markdown",
        "reference_json",
        "documentation_md"
      ]
    },
    "coherent_specifications": {
      "device_functionalities": {
        "TS0001": {
          "manufacturer": "Tuya",
          "type": "switch",
          "functionalities": [
            "onoff",
            "dim",
            "power_monitoring"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genPowerCfg"
          ],
          "capabilities": [
            "onoff",
            "dim",
            "measure_power"
          ],
          "characteristics": [
            "smart_switch",
            "dimmable",
            "power_monitor"
          ],
          "common_issues": [
            "dimming_inconsistency",
            "power_reading_accuracy"
          ],
          "solutions": [
            "proper_cluster_mapping",
            "capability_validation"
          ],
          "flow_actions": [
            {
              "id": "turn_on",
              "title": {
                "en": "Turn On",
                "fr": "Allumer",
                "nl": "Aanzetten",
                "ta": "ஆன் செய்யவும்"
              }
            },
            {
              "id": "turn_off",
              "title": {
                "en": "Turn Off",
                "fr": "Éteindre",
                "nl": "Uitzetten",
                "ta": "ஆஃப் செய்யவும்"
              }
            },
            {
              "id": "set_dim_level",
              "title": {
                "en": "Set Dim Level",
                "fr": "Définir le Niveau",
                "nl": "Dimniveau Instellen",
                "ta": "மங்கல் நிலையை அமைக்கவும்"
              },
              "args": [
                {
                  "name": "level",
                  "type": "number",
                  "min": 0,
                  "max": 100
                }
              ]
            },
            {
              "id": "measure_power",
              "title": {
                "en": "Measure Power",
                "fr": "Mesurer la Puissance",
                "nl": "Vermogen Meten",
                "ta": "சக்தியை அளவிடவும்"
              }
            }
          ],
          "flow_triggers": [
            {
              "id": "turned_on",
              "title": {
                "en": "Turned On",
                "fr": "Allumé",
                "nl": "Aangezet",
                "ta": "ஆன் செய்யப்பட்டது"
              }
            },
            {
              "id": "turned_off",
              "title": {
                "en": "Turned Off",
                "fr": "Éteint",
                "nl": "Uitgezet",
                "ta": "ஆஃப் செய்யப்பட்டது"
              }
            },
            {
              "id": "dim_level_changed",
              "title": {
                "en": "Dim Level Changed",
                "fr": "Niveau Modifié",
                "nl": "Dimniveau Gewijzigd",
                "ta": "மங்கல் நிலை மாற்றப்பட்டது"
              }
            },
            {
              "id": "power_changed",
              "title": {
                "en": "Power Changed",
                "fr": "Puissance Modifiée",
                "nl": "Vermogen Gewijzigd",
                "ta": "சக்தி மாற்றப்பட்டது"
              }
            }
          ],
          "settings": [
            {
              "id": "manufacturer",
              "type": "text",
              "title": {
                "en": "Manufacturer",
                "fr": "Fabricant",
                "nl": "Fabrikant",
                "ta": "உற்பத்தியாளர்"
              },
              "value": "Tuya"
            },
            {
              "id": "model",
              "type": "text",
              "title": {
                "en": "Model",
                "fr": "Modèle",
                "nl": "Model",
                "ta": "மாடல்"
              },
              "value": "switch"
            },
            {
              "id": "power_calibration",
              "type": "number",
              "title": {
                "en": "Power Calibration",
                "fr": "Calibration Puissance",
                "nl": "Vermogen Kalibratie",
                "ta": "சக்தி அளவீடு"
              },
              "value": 1,
              "min": 0.1,
              "max": 10
            }
          ]
        },
        "TS0207": {
          "manufacturer": "Tuya",
          "type": "rgb_light",
          "functionalities": [
            "onoff",
            "dim",
            "rgb_control",
            "color_temperature"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genColorCtrl"
          ],
          "capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation",
            "light_temperature"
          ],
          "characteristics": [
            "smart_bulb",
            "rgb_light",
            "color_temperature",
            "dimmable"
          ],
          "common_issues": [
            "color_accuracy",
            "hue_mapping",
            "saturation_control"
          ],
          "solutions": [
            "color_calibration",
            "hue_saturation_mapping",
            "temperature_range"
          ],
          "flow_actions": [
            {
              "id": "turn_on",
              "title": {
                "en": "Turn On",
                "fr": "Allumer",
                "nl": "Aanzetten",
                "ta": "ஆன் செய்யவும்"
              }
            },
            {
              "id": "turn_off",
              "title": {
                "en": "Turn Off",
                "fr": "Éteindre",
                "nl": "Uitzetten",
                "ta": "ஆஃப் செய்யவும்"
              }
            },
            {
              "id": "set_dim_level",
              "title": {
                "en": "Set Dim Level",
                "fr": "Définir le Niveau",
                "nl": "Dimniveau Instellen",
                "ta": "மங்கல் நிலையை அமைக்கவும்"
              },
              "args": [
                {
                  "name": "level",
                  "type": "number",
                  "min": 0,
                  "max": 100
                }
              ]
            },
            {
              "id": "set_hue",
              "title": {
                "en": "Set Hue",
                "fr": "Définir la Teinte",
                "nl": "Tint Instellen",
                "ta": "வண்ணத்தை அமைக்கவும்"
              },
              "args": [
                {
                  "name": "hue",
                  "type": "number",
                  "min": 0,
                  "max": 360
                }
              ]
            },
            {
              "id": "set_rgb_color",
              "title": {
                "en": "Set RGB Color",
                "fr": "Définir la Couleur RGB",
                "nl": "RGB Kleur Instellen",
                "ta": "RGB வண்ணத்தை அமைக்கவும்"
              },
              "args": [
                {
                  "name": "hue",
                  "type": "number",
                  "title": {
                    "en": "Hue",
                    "fr": "Teinte",
                    "nl": "Tint",
                    "ta": "வண்ணம்"
                  },
                  "min": 0,
                  "max": 360
                },
                {
                  "name": "saturation",
                  "type": "number",
                  "title": {
                    "en": "Saturation",
                    "fr": "Saturation",
                    "nl": "Verzadiging",
                    "ta": "செறிவு"
                  },
                  "min": 0,
                  "max": 100
                }
              ]
            }
          ],
          "flow_triggers": [
            {
              "id": "turned_on",
              "title": {
                "en": "Turned On",
                "fr": "Allumé",
                "nl": "Aangezet",
                "ta": "ஆன் செய்யப்பட்டது"
              }
            },
            {
              "id": "turned_off",
              "title": {
                "en": "Turned Off",
                "fr": "Éteint",
                "nl": "Uitgezet",
                "ta": "ஆஃப் செய்யப்பட்டது"
              }
            },
            {
              "id": "dim_level_changed",
              "title": {
                "en": "Dim Level Changed",
                "fr": "Niveau Modifié",
                "nl": "Dimniveau Gewijzigd",
                "ta": "மங்கல் நிலை மாற்றப்பட்டது"
              }
            }
          ],
          "settings": [
            {
              "id": "manufacturer",
              "type": "text",
              "title": {
                "en": "Manufacturer",
                "fr": "Fabricant",
                "nl": "Fabrikant",
                "ta": "உற்பத்தியாளர்"
              },
              "value": "Tuya"
            },
            {
              "id": "model",
              "type": "text",
              "title": {
                "en": "Model",
                "fr": "Modèle",
                "nl": "Model",
                "ta": "மாடல்"
              },
              "value": "rgb_light"
            }
          ]
        },
        "TS0601": {
          "manufacturer": "Tuya",
          "type": "curtain_controller",
          "functionalities": [
            "open_close",
            "position_control",
            "tilt_control"
          ],
          "clusters": [
            "genBasic",
            "genOnOff",
            "genLevelCtrl",
            "genWindowCovering"
          ],
          "capabilities": [
            "windowcoverings_set",
            "windowcoverings_tilt_set"
          ],
          "characteristics": [
            "curtain_controller",
            "position_control",
            "tilt_control"
          ],
          "common_issues": [
            "position_accuracy",
            "tilt_calibration"
          ],
          "solutions": [
            "position_calibration",
            "tilt_mapping"
          ],
          "flow_actions": [],
          "flow_triggers": [],
          "settings": [
            {
              "id": "manufacturer",
              "type": "text",
              "title": {
                "en": "Manufacturer",
                "fr": "Fabricant",
                "nl": "Fabrikant",
                "ta": "உற்பத்தியாளர்"
              },
              "value": "Tuya"
            },
            {
              "id": "model",
              "type": "text",
              "title": {
                "en": "Model",
                "fr": "Modèle",
                "nl": "Model",
                "ta": "மாடல்"
              },
              "value": "curtain_controller"
            }
          ]
        },
        "TS130F": {
          "manufacturer": "Tuya",
          "type": "motion_sensor",
          "functionalities": [
            "motion_detection",
            "illuminance_measurement",
            "battery_monitoring"
          ],
          "clusters": [
            "genBasic",
            "genOccupancySensing",
            "genIlluminanceMeasurement",
            "genPowerCfg"
          ],
          "capabilities": [
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "characteristics": [
            "motion_sensor",
            "illuminance_sensor",
            "battery_powered"
          ],
          "common_issues": [
            "false_motion",
            "battery_drain",
            "illuminance_accuracy"
          ],
          "solutions": [
            "motion_sensitivity",
            "battery_optimization",
            "illuminance_calibration"
          ],
          "flow_actions": [],
          "flow_triggers": [
            {
              "id": "motion_detected",
              "title": {
                "en": "Motion Detected",
                "fr": "Mouvement Détecté",
                "nl": "Beweging Gedetecteerd",
                "ta": "இயக்கம் கண்டறியப்பட்டது"
              }
            },
            {
              "id": "motion_cleared",
              "title": {
                "en": "Motion Cleared",
                "fr": "Mouvement Effacé",
                "nl": "Beweging Gewist",
                "ta": "இயக்கம் அழிக்கப்பட்டது"
              }
            }
          ],
          "settings": [
            {
              "id": "manufacturer",
              "type": "text",
              "title": {
                "en": "Manufacturer",
                "fr": "Fabricant",
                "nl": "Fabrikant",
                "ta": "உற்பத்தியாளர்"
              },
              "value": "Tuya"
            },
            {
              "id": "model",
              "type": "text",
              "title": {
                "en": "Model",
                "fr": "Modèle",
                "nl": "Model",
                "ta": "மாடல்"
              },
              "value": "motion_sensor"
            }
          ]
        },
        "THB2": {
          "manufacturer": "Tuya",
          "type": "temperature_humidity_sensor",
          "functionalities": [
            "temperature_measurement",
            "humidity_measurement",
            "battery_monitoring"
          ],
          "clusters": [
            "genBasic",
            "genTempMeasurement",
            "genHumidityMeasurement",
            "genPowerCfg"
          ],
          "capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_battery"
          ],
          "characteristics": [
            "temperature_sensor",
            "humidity_sensor",
            "battery_powered"
          ],
          "common_issues": [
            "temperature_accuracy",
            "humidity_accuracy",
            "battery_life"
          ],
          "solutions": [
            "temperature_calibration",
            "humidity_calibration",
            "battery_optimization"
          ],
          "flow_actions": [],
          "flow_triggers": [
            {
              "id": "temperature_changed",
              "title": {
                "en": "Temperature Changed",
                "fr": "Température Modifiée",
                "nl": "Temperatuur Gewijzigd",
                "ta": "வெப்பநிலை மாற்றப்பட்டது"
              }
            },
            {
              "id": "temperature_changed",
              "title": {
                "en": "Temperature Changed",
                "fr": "Température Modifiée",
                "nl": "Temperatuur Gewijzigd",
                "ta": "வெப்பநிலை மாற்றப்பட்டது"
              }
            },
            {
              "id": "humidity_changed",
              "title": {
                "en": "Humidity Changed",
                "fr": "Humidité Modifiée",
                "nl": "Vochtigheid Gewijzigd",
                "ta": "ஈரப்பதம் மாற்றப்பட்டது"
              }
            }
          ],
          "settings": [
            {
              "id": "manufacturer",
              "type": "text",
              "title": {
                "en": "Manufacturer",
                "fr": "Fabricant",
                "nl": "Fabrikant",
                "ta": "உற்பத்தியாளர்"
              },
              "value": "Tuya"
            },
            {
              "id": "model",
              "type": "text",
              "title": {
                "en": "Model",
                "fr": "Modèle",
                "nl": "Model",
                "ta": "மாடல்"
              },
              "value": "temperature_humidity_sensor"
            },
            {
              "id": "temperature_offset",
              "type": "number",
              "title": {
                "en": "Temperature Offset",
                "fr": "Décalage Température",
                "nl": "Temperatuur Offset",
                "ta": "வெப்பநிலை ஆஃப்செட்"
              },
              "value": 0,
              "min": -10,
              "max": 10
            }
          ]
        }
      },
      "cluster_mappings": {
        "genBasic": {
          "functionality": "Device Information",
          "attributes": [
            "model",
            "manufacturer",
            "firmware_version"
          ],
          "capabilities": [
            "device_info"
          ],
          "mapping": "Basic device identification and information",
          "homey_mapping": {
            "cluster": "Device Information",
            "homey_capability": "device_info",
            "implementation": "Maps Device Information to device_info capability"
          }
        },
        "genOnOff": {
          "functionality": "On/Off Control",
          "attributes": [
            "on_off"
          ],
          "capabilities": [
            "onoff"
          ],
          "mapping": "Basic on/off functionality for switches and lights",
          "homey_mapping": {
            "cluster": "On/Off Control",
            "homey_capability": "onoff",
            "implementation": "Maps On/Off Control to onoff capability"
          }
        },
        "genLevelCtrl": {
          "functionality": "Dimming Control",
          "attributes": [
            "current_level",
            "remaining_time"
          ],
          "capabilities": [
            "dim"
          ],
          "mapping": "Dimming functionality for lights and switches",
          "homey_mapping": {
            "cluster": "Dimming Control",
            "homey_capability": "dim",
            "implementation": "Maps Dimming Control to dim capability"
          }
        },
        "genColorCtrl": {
          "functionality": "Color Control",
          "attributes": [
            "current_hue",
            "current_saturation",
            "current_x",
            "current_y"
          ],
          "capabilities": [
            "light_hue",
            "light_saturation",
            "light_mode"
          ],
          "mapping": "RGB color control for smart lights",
          "homey_mapping": {
            "cluster": "Color Control",
            "homey_capability": "light_hue",
            "implementation": "Maps Color Control to light_hue capability"
          }
        },
        "genPowerCfg": {
          "functionality": "Power Configuration",
          "attributes": [
            "battery_voltage",
            "battery_percentage_remaining"
          ],
          "capabilities": [
            "measure_battery"
          ],
          "mapping": "Battery monitoring for battery-powered devices",
          "homey_mapping": {
            "cluster": "Power Configuration",
            "homey_capability": "measure_battery",
            "implementation": "Maps Power Configuration to measure_battery capability"
          }
        },
        "genTempMeasurement": {
          "functionality": "Temperature Measurement",
          "attributes": [
            "measured_value",
            "min_measured_value",
            "max_measured_value"
          ],
          "capabilities": [
            "measure_temperature"
          ],
          "mapping": "Temperature sensing for thermostats and sensors",
          "homey_mapping": {
            "cluster": "Temperature Measurement",
            "homey_capability": "measure_temperature",
            "implementation": "Maps Temperature Measurement to measure_temperature capability"
          }
        },
        "genHumidityMeasurement": {
          "functionality": "Humidity Measurement",
          "attributes": [
            "measured_value",
            "min_measured_value",
            "max_measured_value"
          ],
          "capabilities": [
            "measure_humidity"
          ],
          "mapping": "Humidity sensing for environmental sensors",
          "homey_mapping": {
            "cluster": "Humidity Measurement",
            "homey_capability": "measure_humidity",
            "implementation": "Maps Humidity Measurement to measure_humidity capability"
          }
        },
        "genOccupancySensing": {
          "functionality": "Occupancy Sensing",
          "attributes": [
            "occupancy"
          ],
          "capabilities": [
            "alarm_motion"
          ],
          "mapping": "Motion detection for occupancy sensors",
          "homey_mapping": {
            "cluster": "Occupancy Sensing",
            "homey_capability": "alarm_motion",
            "implementation": "Maps Occupancy Sensing to alarm_motion capability"
          }
        },
        "genIlluminanceMeasurement": {
          "functionality": "Illuminance Measurement",
          "attributes": [
            "measured_value",
            "min_measured_value",
            "max_measured_value"
          ],
          "capabilities": [
            "measure_luminance"
          ],
          "mapping": "Light level measurement for illuminance sensors",
          "homey_mapping": {
            "cluster": "Illuminance Measurement",
            "homey_capability": "measure_luminance",
            "implementation": "Maps Illuminance Measurement to measure_luminance capability"
          }
        },
        "genWindowCovering": {
          "functionality": "Window Covering",
          "attributes": [
            "current_position_lift",
            "current_position_tilt"
          ],
          "capabilities": [
            "windowcoverings_set",
            "windowcoverings_tilt_set"
          ],
          "mapping": "Blind and curtain control",
          "homey_mapping": {
            "cluster": "Window Covering",
            "homey_capability": "windowcoverings_set",
            "implementation": "Maps Window Covering to windowcoverings_set capability"
          }
        },
        "genThermostat": {
          "functionality": "Thermostat Control",
          "attributes": [
            "local_temperature",
            "occupied_heating_setpoint",
            "system_mode"
          ],
          "capabilities": [
            "thermostat_mode",
            "thermostat_target_temperature",
            "thermostat_measure_temperature"
          ],
          "mapping": "HVAC thermostat control",
          "homey_mapping": {
            "cluster": "Thermostat Control",
            "homey_capability": "thermostat_mode",
            "implementation": "Maps Thermostat Control to thermostat_mode capability"
          }
        },
        "genAlarms": {
          "functionality": "Alarm System",
          "attributes": [
            "alarm_count",
            "alarm_code"
          ],
          "capabilities": [
            "alarm_contact",
            "alarm_smoke",
            "alarm_water"
          ],
          "mapping": "Security and safety alarms",
          "homey_mapping": {
            "cluster": "Alarm System",
            "homey_capability": "alarm_contact",
            "implementation": "Maps Alarm System to alarm_contact capability"
          }
        }
      },
      "capability_mappings": {
        "onoff": {
          "functionality": "On/Off Control",
          "devices": [
            "switches",
            "lights",
            "plugs",
            "appliances"
          ],
          "clusters": [
            "genOnOff"
          ],
          "flow_actions": [
            "turn_on",
            "turn_off",
            "toggle"
          ],
          "flow_triggers": [
            "turned_on",
            "turned_off"
          ],
          "mapping": "Basic on/off functionality",
          "implementation": {
            "capability": "On/Off Control",
            "clusters": [
              "genOnOff"
            ],
            "flow_integration": [
              "turn_on",
              "turn_off",
              "toggle"
            ],
            "trigger_integration": [
              "turned_on",
              "turned_off"
            ],
            "implementation": "Implements On/Off Control using genOnOff clusters"
          }
        },
        "dim": {
          "functionality": "Dimming Control",
          "devices": [
            "dimmable_lights",
            "dimmable_switches"
          ],
          "clusters": [
            "genLevelCtrl"
          ],
          "flow_actions": [
            "set_dim_level"
          ],
          "flow_triggers": [
            "dim_level_changed"
          ],
          "mapping": "Brightness control for dimmable devices",
          "implementation": {
            "capability": "Dimming Control",
            "clusters": [
              "genLevelCtrl"
            ],
            "flow_integration": [
              "set_dim_level"
            ],
            "trigger_integration": [
              "dim_level_changed"
            ],
            "implementation": "Implements Dimming Control using genLevelCtrl clusters"
          }
        },
        "light_hue": {
          "functionality": "Hue Control",
          "devices": [
            "rgb_lights",
            "color_lights"
          ],
          "clusters": [
            "genColorCtrl"
          ],
          "flow_actions": [
            "set_hue"
          ],
          "flow_triggers": [
            "hue_changed"
          ],
          "mapping": "Color hue control for RGB lights",
          "implementation": {
            "capability": "Hue Control",
            "clusters": [
              "genColorCtrl"
            ],
            "flow_integration": [
              "set_hue"
            ],
            "trigger_integration": [
              "hue_changed"
            ],
            "implementation": "Implements Hue Control using genColorCtrl clusters"
          }
        },
        "light_saturation": {
          "functionality": "Saturation Control",
          "devices": [
            "rgb_lights",
            "color_lights"
          ],
          "clusters": [
            "genColorCtrl"
          ],
          "flow_actions": [
            "set_saturation"
          ],
          "flow_triggers": [
            "saturation_changed"
          ],
          "mapping": "Color saturation control for RGB lights",
          "implementation": {
            "capability": "Saturation Control",
            "clusters": [
              "genColorCtrl"
            ],
            "flow_integration": [
              "set_saturation"
            ],
            "trigger_integration": [
              "saturation_changed"
            ],
            "implementation": "Implements Saturation Control using genColorCtrl clusters"
          }
        },
        "light_temperature": {
          "functionality": "Color Temperature Control",
          "devices": [
            "white_lights",
            "tunable_white_lights"
          ],
          "clusters": [
            "genColorCtrl"
          ],
          "flow_actions": [
            "set_temperature"
          ],
          "flow_triggers": [
            "temperature_changed"
          ],
          "mapping": "Color temperature control for white lights",
          "implementation": {
            "capability": "Color Temperature Control",
            "clusters": [
              "genColorCtrl"
            ],
            "flow_integration": [
              "set_temperature"
            ],
            "trigger_integration": [
              "temperature_changed"
            ],
            "implementation": "Implements Color Temperature Control using genColorCtrl clusters"
          }
        },
        "measure_power": {
          "functionality": "Power Measurement",
          "devices": [
            "smart_plugs",
            "power_monitors"
          ],
          "clusters": [
            "genPowerCfg",
            "genEnergyMeasurement"
          ],
          "flow_actions": [
            "measure_power"
          ],
          "flow_triggers": [
            "power_changed"
          ],
          "mapping": "Power consumption monitoring",
          "implementation": {
            "capability": "Power Measurement",
            "clusters": [
              "genPowerCfg",
              "genEnergyMeasurement"
            ],
            "flow_integration": [
              "measure_power"
            ],
            "trigger_integration": [
              "power_changed"
            ],
            "implementation": "Implements Power Measurement using genPowerCfg, genEnergyMeasurement clusters"
          }
        },
        "measure_temperature": {
          "functionality": "Temperature Measurement",
          "devices": [
            "temperature_sensors",
            "thermostats"
          ],
          "clusters": [
            "genTempMeasurement"
          ],
          "flow_actions": [
            "measure_temperature"
          ],
          "flow_triggers": [
            "temperature_changed"
          ],
          "mapping": "Temperature sensing and monitoring",
          "implementation": {
            "capability": "Temperature Measurement",
            "clusters": [
              "genTempMeasurement"
            ],
            "flow_integration": [
              "measure_temperature"
            ],
            "trigger_integration": [
              "temperature_changed"
            ],
            "implementation": "Implements Temperature Measurement using genTempMeasurement clusters"
          }
        },
        "measure_humidity": {
          "functionality": "Humidity Measurement",
          "devices": [
            "humidity_sensors",
            "environmental_sensors"
          ],
          "clusters": [
            "genHumidityMeasurement"
          ],
          "flow_actions": [
            "measure_humidity"
          ],
          "flow_triggers": [
            "humidity_changed"
          ],
          "mapping": "Humidity sensing and monitoring",
          "implementation": {
            "capability": "Humidity Measurement",
            "clusters": [
              "genHumidityMeasurement"
            ],
            "flow_integration": [
              "measure_humidity"
            ],
            "trigger_integration": [
              "humidity_changed"
            ],
            "implementation": "Implements Humidity Measurement using genHumidityMeasurement clusters"
          }
        },
        "measure_battery": {
          "functionality": "Battery Measurement",
          "devices": [
            "battery_powered_devices"
          ],
          "clusters": [
            "genPowerCfg"
          ],
          "flow_actions": [
            "measure_battery"
          ],
          "flow_triggers": [
            "battery_changed"
          ],
          "mapping": "Battery level monitoring",
          "implementation": {
            "capability": "Battery Measurement",
            "clusters": [
              "genPowerCfg"
            ],
            "flow_integration": [
              "measure_battery"
            ],
            "trigger_integration": [
              "battery_changed"
            ],
            "implementation": "Implements Battery Measurement using genPowerCfg clusters"
          }
        },
        "alarm_motion": {
          "functionality": "Motion Alarm",
          "devices": [
            "motion_sensors",
            "occupancy_sensors"
          ],
          "clusters": [
            "genOccupancySensing"
          ],
          "flow_actions": [
            "detect_motion"
          ],
          "flow_triggers": [
            "motion_detected",
            "motion_cleared"
          ],
          "mapping": "Motion detection and alarm",
          "implementation": {
            "capability": "Motion Alarm",
            "clusters": [
              "genOccupancySensing"
            ],
            "flow_integration": [
              "detect_motion"
            ],
            "trigger_integration": [
              "motion_detected",
              "motion_cleared"
            ],
            "implementation": "Implements Motion Alarm using genOccupancySensing clusters"
          }
        },
        "windowcoverings_set": {
          "functionality": "Window Covering Control",
          "devices": [
            "blinds",
            "curtains",
            "shutters"
          ],
          "clusters": [
            "genWindowCovering"
          ],
          "flow_actions": [
            "set_position",
            "open",
            "close"
          ],
          "flow_triggers": [
            "position_changed"
          ],
          "mapping": "Blind and curtain position control",
          "implementation": {
            "capability": "Window Covering Control",
            "clusters": [
              "genWindowCovering"
            ],
            "flow_integration": [
              "set_position",
              "open",
              "close"
            ],
            "trigger_integration": [
              "position_changed"
            ],
            "implementation": "Implements Window Covering Control using genWindowCovering clusters"
          }
        },
        "thermostat_mode": {
          "functionality": "Thermostat Mode Control",
          "devices": [
            "thermostats",
            "hvac_controllers"
          ],
          "clusters": [
            "genThermostat"
          ],
          "flow_actions": [
            "set_mode"
          ],
          "flow_triggers": [
            "mode_changed"
          ],
          "mapping": "HVAC mode control (heat, cool, auto, off)",
          "implementation": {
            "capability": "Thermostat Mode Control",
            "clusters": [
              "genThermostat"
            ],
            "flow_integration": [
              "set_mode"
            ],
            "trigger_integration": [
              "mode_changed"
            ],
            "implementation": "Implements Thermostat Mode Control using genThermostat clusters"
          }
        }
      },
      "common_issues": {
        "dimming_not_working": {
          "description": "Dimming functionality not working properly",
          "affected_devices": [
            "TS0001"
          ],
          "solutions": [
            "cluster_mapping",
            "capability_adjustment"
          ]
        },
        "inconsistent_behavior": {
          "description": "Device behavior is inconsistent",
          "affected_devices": [
            "TS0001"
          ],
          "solutions": [
            "cluster_mapping",
            "capability_adjustment"
          ]
        },
        "color_not_changing": {
          "description": "RGB color not changing as expected",
          "affected_devices": [
            "TS0207"
          ],
          "solutions": [
            "genColorCtrl_cluster",
            "hue_saturation_mapping"
          ]
        },
        "hue_control_broken": {
          "description": "Hue control functionality broken",
          "affected_devices": [
            "TS0207"
          ],
          "solutions": [
            "genColorCtrl_cluster",
            "hue_saturation_mapping"
          ]
        },
        "false_triggers": {
          "description": "Motion sensor triggering false alarms",
          "affected_devices": [
            "motion_sensor"
          ],
          "solutions": [
            "sensitivity_adjustment",
            "battery_optimization"
          ]
        },
        "battery_drain": {
          "description": "Battery draining too quickly",
          "affected_devices": [
            "motion_sensor"
          ],
          "solutions": [
            "sensitivity_adjustment",
            "battery_optimization"
          ]
        },
        "inaccurate_readings": {
          "description": "Power readings are inaccurate",
          "affected_devices": [
            "smart_plug"
          ],
          "solutions": [
            "power_calibration",
            "measurement_accuracy"
          ]
        },
        "calibration_needed": {
          "description": "Device needs calibration",
          "affected_devices": [
            "smart_plug"
          ],
          "solutions": [
            "power_calibration",
            "measurement_accuracy"
          ]
        },
        "temperature_drift": {
          "description": "Temperature readings drifting over time",
          "affected_devices": [
            "thermostat"
          ],
          "solutions": [
            "temperature_calibration",
            "mode_mapping"
          ]
        },
        "mode_switching": {
          "description": "Thermostat mode switching issues",
          "affected_devices": [
            "thermostat"
          ],
          "solutions": [
            "temperature_calibration",
            "mode_mapping"
          ]
        }
      },
      "solutions": {
        "cluster_mapping": {
          "description": "Proper Zigbee cluster mapping",
          "affected_issues": [
            "dimming_not_working",
            "inconsistent_behavior"
          ],
          "implementation": "Map device clusters to appropriate Homey capabilities"
        },
        "capability_adjustment": {
          "description": "Adjust Homey capabilities",
          "affected_issues": [
            "dimming_not_working",
            "inconsistent_behavior"
          ],
          "implementation": "Adjust capability parameters for better device compatibility"
        },
        "genColorCtrl_cluster": {
          "description": "Use genColorCtrl cluster for color control",
          "affected_issues": [
            "color_not_changing",
            "hue_control_broken"
          ],
          "implementation": "Implement proper genColorCtrl cluster handling"
        },
        "hue_saturation_mapping": {
          "description": "Map hue and saturation values correctly",
          "affected_issues": [
            "color_not_changing",
            "hue_control_broken"
          ],
          "implementation": "Map hue (0-360) and saturation (0-100) values"
        },
        "sensitivity_adjustment": {
          "description": "Adjust motion sensor sensitivity",
          "affected_issues": [
            "false_triggers",
            "battery_drain"
          ],
          "implementation": "Adjust motion detection sensitivity settings"
        },
        "battery_optimization": {
          "description": "Optimize battery usage",
          "affected_issues": [
            "false_triggers",
            "battery_drain"
          ],
          "implementation": "Implement battery-saving communication patterns"
        },
        "power_calibration": {
          "description": "Calibrate power measurements",
          "affected_issues": [
            "inaccurate_readings",
            "calibration_needed"
          ],
          "implementation": "Apply power measurement calibration factors"
        },
        "measurement_accuracy": {
          "description": "Improve measurement accuracy",
          "affected_issues": [
            "inaccurate_readings",
            "calibration_needed"
          ],
          "implementation": "Improve measurement precision and filtering"
        },
        "temperature_calibration": {
          "description": "Calibrate temperature readings",
          "affected_issues": [
            "temperature_drift",
            "mode_switching"
          ],
          "implementation": "Apply temperature offset and calibration"
        },
        "mode_mapping": {
          "description": "Map thermostat modes correctly",
          "affected_issues": [
            "temperature_drift",
            "mode_switching"
          ],
          "implementation": "Map thermostat modes to Homey capabilities"
        }
      },
      "recommendations": {
        "device_implementation": "Implement devices with proper cluster mapping and capability validation",
        "error_handling": "Add comprehensive error handling for all device interactions",
        "performance_optimization": "Optimize device communication for better responsiveness",
        "user_experience": "Provide clear feedback and status updates for all device operations",
        "testing": "Implement thorough testing for all device functionalities and edge cases"
      },
      "implementation_date": "2025-07-28T22:27:59.960Z"
    }
  }
}