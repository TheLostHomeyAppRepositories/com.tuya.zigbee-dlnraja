#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// Template de base pour le README
const README_TEMPLATE = {
  en: {
    title: "Tuya Zigbee Integration for Homey",
    description: "Universal Tuya ZigBee device integration with AI-powered features for Homey SDK3",
    features: [
      "üîå Universal Tuya ZigBee device support",
      "ü§ñ AI-powered device detection and optimization",
      "üìä Real-time dashboard and monitoring",
      "üåç Multi-language support (EN, FR, NL, TA)",
      "‚ö° Homey SDK3 compatible",
      "üîÑ Automatic synchronization with tuya-light version",
      "üìà Comprehensive Zigbee reference matrix"
    ],
    installation: "Install via Homey App Store or manual installation",
    usage: "Add Tuya Zigbee devices through the Homey app interface",
    contributing: "Contributions welcome! Please read CONTRIBUTING.md",
    license: "MIT License"
  },
  fr: {
    title: "Int√©gration Tuya Zigbee pour Homey",
    description: "Int√©gration universelle des appareils Tuya ZigBee avec des fonctionnalit√©s IA pour Homey SDK3",
    features: [
      "üîå Support universel des appareils Tuya ZigBee",
      "ü§ñ D√©tection et optimisation IA des appareils",
      "üìä Tableau de bord et surveillance en temps r√©el",
      "üåç Support multilingue (EN, FR, NL, TA)",
      "‚ö° Compatible Homey SDK3",
      "üîÑ Synchronisation automatique avec la version tuya-light",
      "üìà Matrice de r√©f√©rence Zigbee compl√®te"
    ],
    installation: "Installer via Homey App Store ou installation manuelle",
    usage: "Ajouter des appareils Tuya Zigbee via l'interface Homey",
    contributing: "Contributions bienvenues ! Lisez CONTRIBUTING.md",
    license: "Licence MIT"
  },
  nl: {
    title: "Tuya Zigbee Integratie voor Homey",
    description: "Universele Tuya ZigBee apparaat integratie met AI-aangedreven functies voor Homey SDK3",
    features: [
      "üîå Universele Tuya ZigBee apparaat ondersteuning",
      "ü§ñ AI-aangedreven apparaat detectie en optimalisatie",
      "üìä Real-time dashboard en monitoring",
      "üåç Meertalige ondersteuning (EN, FR, NL, TA)",
      "‚ö° Homey SDK3 compatibel",
      "üîÑ Automatische synchronisatie met tuya-light versie",
      "üìà Uitgebreide Zigbee referentie matrix"
    ],
    installation: "Installeer via Homey App Store of handmatige installatie",
    usage: "Voeg Tuya Zigbee apparaten toe via de Homey app interface",
    contributing: "Bijdragen welkom! Lees CONTRIBUTING.md",
    license: "MIT Licentie"
  },
  ta: {
    title: "Homey ‡Æï‡Øç‡Æï‡Ææ‡Æ© Tuya Zigbee ‡Æí‡Æ∞‡ØÅ‡Æô‡Øç‡Æï‡Æø‡Æ£‡Øà‡Æ™‡Øç‡Æ™‡ØÅ",
    description: "Homey SDK3 ‡Æï‡Øç‡Æï‡Ææ‡Æ© AI-‡ÆÜ‡Æ≤‡Øç ‡Æá‡ÆØ‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡ØÅ‡ÆÆ‡Øç ‡ÆÖ‡ÆÆ‡Øç‡Æö‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æü‡Æ©‡Øç ‡Æâ‡Æ≤‡Æï‡Æ≥‡Ææ‡Æµ‡Æø‡ÆØ Tuya ZigBee ‡Æö‡Ææ‡Æ§‡Æ© ‡Æí‡Æ∞‡ØÅ‡Æô‡Øç‡Æï‡Æø‡Æ£‡Øà‡Æ™‡Øç‡Æ™‡ØÅ",
    features: [
      "üîå ‡Æâ‡Æ≤‡Æï‡Æ≥‡Ææ‡Æµ‡Æø‡ÆØ Tuya ZigBee ‡Æö‡Ææ‡Æ§‡Æ© ‡ÆÜ‡Æ§‡Æ∞‡Æµ‡ØÅ",
      "ü§ñ AI-‡ÆÜ‡Æ≤‡Øç ‡Æá‡ÆØ‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡ØÅ‡ÆÆ‡Øç ‡Æö‡Ææ‡Æ§‡Æ© ‡Æï‡Æ£‡Øç‡Æü‡Æ±‡Æø‡Æ§‡Æ≤‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æâ‡Æï‡Æ®‡Øç‡Æ§‡ÆÆ‡ÆØ‡ÆÆ‡Ææ‡Æï‡Øç‡Æï‡Æ≤‡Øç",
      "üìä ‡Æ®‡Øá‡Æ∞‡Æ≤‡Øà ‡Æü‡Ææ‡Æ∑‡Øç‡Æ™‡Øã‡Æ∞‡Øç‡Æü‡ØÅ ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æï‡Æ£‡Øç‡Æï‡Ææ‡Æ£‡Æø‡Æ™‡Øç‡Æ™‡ØÅ",
      "üåç ‡Æ™‡Æ≤ ‡ÆÆ‡Øä‡Æ¥‡Æø ‡ÆÜ‡Æ§‡Æ∞‡Æµ‡ØÅ (EN, FR, NL, TA)",
      "‚ö° Homey SDK3 ‡Æ™‡Øä‡Æ∞‡ØÅ‡Æ®‡Øç‡Æ§‡Æï‡Øç‡Æï‡ØÇ‡Æü‡Æø‡ÆØ‡Æ§‡ØÅ",
      "üîÑ tuya-light ‡Æ™‡Æ§‡Æø‡Æ™‡Øç‡Æ™‡ØÅ‡Æü‡Æ©‡Øç ‡Æ§‡Ææ‡Æ©‡Æø‡ÆØ‡Æô‡Øç‡Æï‡Æø ‡Æí‡Æ§‡Øç‡Æ§‡Æø‡Æö‡Øà‡Æµ‡ØÅ",
      "üìà ‡Æµ‡Æø‡Æ∞‡Æø‡Æµ‡Ææ‡Æ© Zigbee ‡Æï‡ØÅ‡Æ±‡Æø‡Æ™‡Øç‡Æ™‡ØÅ ‡ÆÖ‡Æ£‡Æø"
    ],
    installation: "Homey App Store ‡ÆÆ‡ØÇ‡Æ≤‡ÆÆ‡Øç ‡Æ®‡Æø‡Æ±‡ØÅ‡Æµ‡Æµ‡ØÅ‡ÆÆ‡Øç ‡ÆÖ‡Æ≤‡Øç‡Æ≤‡Æ§‡ØÅ ‡Æï‡Øà‡ÆÆ‡ØÅ‡Æ±‡Øà ‡Æ®‡Æø‡Æ±‡ØÅ‡Æµ‡Æ≤‡Øç",
    usage: "Homey ‡Æ™‡ÆØ‡Æ©‡Øç‡Æ™‡Ææ‡Æü‡Øç‡Æü‡ØÅ ‡Æá‡Æü‡Øà‡ÆÆ‡ØÅ‡Æï‡ÆÆ‡Øç ‡ÆÆ‡ØÇ‡Æ≤‡ÆÆ‡Øç Tuya Zigbee ‡Æö‡Ææ‡Æ§‡Æ©‡Æô‡Øç‡Æï‡Æ≥‡Øà‡Æö‡Øç ‡Æö‡Øá‡Æ∞‡Øç‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç",
    contributing: "‡Æ™‡Æô‡Øç‡Æï‡Æ≥‡Æø‡Æ™‡Øç‡Æ™‡ØÅ‡Æï‡Æ≥‡Øç ‡Æµ‡Æ∞‡Æµ‡Øá‡Æ±‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡ØÅ‡Æï‡Æø‡Æ©‡Øç‡Æ±‡Æ©! CONTRIBUTING.md ‡Æê‡Æ™‡Øç ‡Æ™‡Æü‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç",
    license: "MIT ‡Æâ‡Æ∞‡Æø‡ÆÆ‡ÆÆ‡Øç"
  }
};

function generateMultilingualREADME() {
  let readmeContent = '';
  
  // Generate each language section
  Object.entries(README_TEMPLATE).forEach(([lang, content]) => {
    const langName = {
      en: 'ENGLISH',
      fr: 'FRAN√áAIS',
      nl: 'NEDERLANDS',
      ta: '‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç'
    }[lang];
    
    readmeContent += `# ${langName}\n\n`;
    readmeContent += `## ${content.title}\n\n`;
    readmeContent += `${content.description}\n\n`;
    
    readmeContent += `### ‚ú® Features\n\n`;
    content.features.forEach(feature => {
      readmeContent += `- ${feature}\n`;
    });
    readmeContent += '\n';
    
    readmeContent += `### üì¶ Installation\n\n`;
    readmeContent += `${content.installation}\n\n`;
    
    readmeContent += `### üöÄ Usage\n\n`;
    readmeContent += `${content.usage}\n\n`;
    
    readmeContent += `### ü§ù Contributing\n\n`;
    readmeContent += `${content.contributing}\n\n`;
    
    readmeContent += `### üìÑ License\n\n`;
    readmeContent += `${content.license}\n\n`;
    
    readmeContent += `---\n\n`;
  });
  
  // Add project statistics
  readmeContent += `## üìä Project Statistics\n\n`;
  readmeContent += `- **Total Drivers:** ${getDriverCount()}\n`;
  readmeContent += `- **Zigbee Clusters:** ${getClusterCount()}\n`;
  readmeContent += `- **Device Types:** ${getDeviceTypeCount()}\n`;
  readmeContent += `- **Languages:** 4 (EN, FR, NL, TA)\n`;
  readmeContent += `- **SDK Version:** Homey SDK3\n\n`;
  
  // Add links
  readmeContent += `## üîó Links\n\n`;
  readmeContent += `- [Dashboard](https://dlnraja.github.io/com.tuya.zigbee/)\n`;
  readmeContent += `- [Documentation](https://github.com/dlnraja/com.tuya.zigbee/tree/main/docs)\n`;
  readmeContent += `- [Issues](https://github.com/dlnraja/com.tuya.zigbee/issues)\n`;
  readmeContent += `- [Releases](https://github.com/dlnraja/com.tuya.zigbee/releases)\n\n`;
  
  return readmeContent;
}

function getDriverCount() {
  try {
    const driversDir = path.join(__dirname, '..', 'drivers', 'sdk3');
    if (fs.existsSync(driversDir)) {
      return fs.readdirSync(driversDir).filter(item => 
        fs.statSync(path.join(driversDir, item)).isDirectory()
      ).length;
    }
  } catch (error) {
    console.log('Error counting drivers:', error.message);
  }
  return 'N/A';
}

function getClusterCount() {
  try {
    const clustersFile = path.join(__dirname, '..', 'ref', 'zigbee-matrix.json');
    if (fs.existsSync(clustersFile)) {
      const data = JSON.parse(fs.readFileSync(clustersFile, 'utf8'));
      return Object.keys(data.clusters || {}).length;
    }
  } catch (error) {
    console.log('Error counting clusters:', error.message);
  }
  return 'N/A';
}

function getDeviceTypeCount() {
  try {
    const deviceTypesFile = path.join(__dirname, '..', 'ref', 'device-types.json');
    if (fs.existsSync(deviceTypesFile)) {
      const data = JSON.parse(fs.readFileSync(deviceTypesFile, 'utf8'));
      return Object.keys(data.deviceTypes || {}).length;
    }
  } catch (error) {
    console.log('Error counting device types:', error.message);
  }
  return 'N/A';
}

function main() {
  try {
    console.log('üîÑ Generating multilingual README...');
    
    const readmeContent = generateMultilingualREADME();
    const readmePath = path.join(__dirname, '..', 'README.md');
    
    fs.writeFileSync(readmePath, readmeContent);
    console.log(`‚úÖ README generated: ${readmePath}`);
    
    // Also generate tuya-light version
    const tuyaLightContent = generateTuyaLightREADME();
    const tuyaLightPath = path.join(__dirname, '..', 'tuya-light-README.md');
    fs.writeFileSync(tuyaLightPath, tuyaLightContent);
    console.log(`‚úÖ Tuya Light README generated: ${tuyaLightPath}`);
    
    console.log('üéâ README generation completed successfully!');
    
  } catch (error) {
    console.error('‚ùå Error generating README:', error);
    process.exit(1);
  }
}

function generateTuyaLightREADME() {
  return `# Tuya Light - Simplified Version

## Overview
Simplified version of Tuya Zigbee integration without AI features.

## Installation
\`\`\`bash
homey app install tuya-light.zip
\`\`\`

## Features
- Basic Tuya Zigbee device support
- Homey SDK3 compatible
- Essential drivers only
- No AI/automation features

## Drivers Included
- TS0201 (Temperature Sensor)
- TS0202 (Humidity Sensor)
- TS0601 (Smart Switch)
- TS011F (Smart Plug)
- TS004F (Wall Switch)

## License
MIT License
`;
}

if (require.main === module) {
  main();
}

module.exports = { generateMultilingualREADME, generateTuyaLightREADME };
console.log('README generator ready');
